{"version":3,"sources":["components/Footer/Footer.tsx","utils/connectors.ts","components/ActivateDeactivate/ActivateDeactivate.tsx","components/Header/Header.tsx","components/Wrapper/Wrapper.tsx","pages/Layout.js","components/CsvReader/CsvReader.tsx","components/CsvContainer/CsvContainer.tsx","pages/Home.js","pages/Blogs.js","pages/Contact.js","pages/NoPage.js","App.tsx","index.tsx","utils/provider.ts"],"names":["Footer","className","name","to","map","item","injected","InjectedConnector","supportedChainIds","StyledActivateDeactivateDiv","styled","div","StyledActivateButton","button","StyledDeactivateButton","Activate","context","useWeb3React","activate","active","useState","activating","setActivating","disabled","style","cursor","borderColor","onClick","event","preventDefault","_activate","Deactivate","deactivate","ActivateDeactivate","error","window","alert","errorMessage","constructor","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestError","message","getErrorMessage","Header","Wrapper","props","children","Layout","GREY","GREY_LIGHT","DEFAULT_REMOVE_HOVER_COLOR","REMOVE_HOVER_COLOR_LIGHT","lightenDarkenColor","styles","zone","alignItems","border","borderRadius","display","flexDirection","height","justifyContent","padding","color","file","background","width","position","zIndex","info","paddingLeft","paddingRight","size","backgroundColor","marginBottom","fontSize","progressBar","bottom","zoneHover","default","remove","right","top","CSVReader","setValue","setAddresses","setAmounts","useCSVReader","setZoneHover","removeHoverColor","setRemoveHoverColor","onUploadAccepted","results","data","join","addresses","values","forEach","element","index","push","splitToArrays","console","log","onDragOver","onDragLeave","getRootProps","acceptedFile","ProgressBar","getRemoveFileProps","Remove","Object","assign","formatFileSize","onMouseOver","onMouseOut","CsvContainer","readString","usePapaParse","value","loading","setLoading","amounts","label","tokensList","setTokensList","selectedOption","setSelectedOption","multiSendContractAddress","Web3Api","useMoralisWeb3Api","library","account","chainId","fetchTokenBalances","getBalance","balance","netIdName","nativeAssets","options","chain","address","getTokenBalances","balances","tokens","contract","token_address","symbol","ethers","utils","formatUnits","unshift","toFixed","handleReadString","worker","complete","parseEther","useEffect","find","c","onChange","newValue","isLoading","placeholder","htmlFor","onBlur","id","target","signer","getSigner","multisSendContract","Contract","multisenderV1","abi","tokenContract","ERC20","result","reduce","sum","elem","add","BigNumber","from","toString","approve","multiSend","setMultisSendTxn","wait","handleMultiSend","type","Home","Blogs","Contact","NoPage","document","URL","App","path","ReactDOM","render","StrictMode","getLibrary","provider","web3Provider","Web3Provider","pollingInterval","serverUrl","appId","getElementById"],"mappings":"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","file":"static/js/main.f048f563.chunk.js","sourcesContent":["import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer: FC = () => {\r\n  const navbarRight = [\r\n    { name: '', to: '/' },\r\n    { name: '', to: '/blogs' },\r\n    { name: '', to: '/contact' },\r\n  ];\r\n  const navbarLeft = [\r\n    { name: '', to: '/' },\r\n    { name: '', to: '/blogs' },\r\n    { name: '', to: '/contact' },\r\n  ];\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"header__navbar\">\r\n        <ul className='header__list'>\r\n          {navbarLeft.map((item) => (\r\n            <li key={item.name} className=\"header__link-container\">\r\n              <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                <div className=\"header__link\">{item.name}</div>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n      <nav className=\"header__navbar\">\r\n        <ul className='header__list'>\r\n          {navbarRight.map((item) => (\r\n            <li key={item.name} className=\"header__link-container\">\r\n              <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                <div className=\"header__link\">{item.name}</div>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 56, 97, 31337]\r\n});\r\n","import { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError\r\n} from '@web3-react/injected-connector';\r\nimport { MouseEvent, ReactElement, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { injected } from '../../utils/connectors';\r\nimport { useEagerConnect, useInactiveListener } from '../../utils/hooks';\r\nimport { Provider } from '../../utils/provider';\r\n\r\ntype ActivateFunction = (\r\n  connector: AbstractConnector,\r\n  onError?: (error: Error) => void,\r\n  throwErrors?: boolean\r\n) => Promise<void>;\r\n\r\nfunction getErrorMessage(error: Error): string {\r\n  let errorMessage: string;\r\n\r\n  switch (error.constructor) {\r\n    case NoEthereumProviderError:\r\n      errorMessage = `No Ethereum browser extension detected. Please install MetaMask extension.`;\r\n      break;\r\n    case UnsupportedChainIdError:\r\n      errorMessage = `You're connected to an unsupported network.`;\r\n      break;\r\n    case UserRejectedRequestError:\r\n      errorMessage = `Please authorize this website to access your Ethereum account.`;\r\n      break;\r\n    default:\r\n      errorMessage = error.message;\r\n  }\r\n\r\n  return errorMessage;\r\n}\r\n\r\nconst StyledActivateDeactivateDiv = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  place-self: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledActivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledDeactivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Activate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { activate, active } = context;\r\n\r\n  const [activating, setActivating] = useState<boolean>(false);\r\n\r\n  function handleActivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    async function _activate(activate: ActivateFunction): Promise<void> {\r\n      setActivating(true);\r\n      await activate(injected);\r\n      setActivating(false);\r\n    }\r\n\r\n    _activate(activate);\r\n    \r\n  }\r\n\r\n  // // handle logic to eagerly connect to the injected ethereum provider, if it exists and has\r\n  // // granted access already\r\n  // const eagerConnectionSuccessful = useEagerConnect();\r\n\r\n  // // handle logic to connect in reaction to certain events on the injected ethereum provider,\r\n  // // if it exists\r\n  // useInactiveListener(!eagerConnectionSuccessful);\r\n\r\n  return (\r\n    <StyledActivateButton\r\n      disabled={active}\r\n      style={{\r\n        cursor: active ? 'not-allowed' : 'pointer',\r\n        borderColor: activating ? 'orange' : active ? 'unset' : 'green'\r\n      }}\r\n      onClick={handleActivate}\r\n    >\r\n      Connect\r\n    </StyledActivateButton>\r\n  );\r\n}\r\n\r\nfunction Deactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { deactivate, active } = context;\r\n\r\n  function handleDeactivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <StyledDeactivateButton\r\n      disabled={!active}\r\n      style={{\r\n        cursor: active ? 'pointer' : 'not-allowed',\r\n        borderColor: active ? 'red' : 'unset'\r\n      }}\r\n      onClick={handleDeactivate}\r\n    >\r\n      Disconnect\r\n    </StyledDeactivateButton>\r\n  );\r\n}\r\n\r\nexport function ActivateDeactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { error } = context;\r\n\r\n  if (!!error) {\r\n    window.alert(getErrorMessage(error));\r\n  }\r\n\r\n  return (\r\n    <StyledActivateDeactivateDiv>\r\n      <Activate />\r\n      <Deactivate />\r\n    </StyledActivateDeactivateDiv>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ActivateDeactivate } from '../ActivateDeactivate/ActivateDeactivate';\r\n\r\nconst Header: FC = () => {\r\n  const navbar = [\r\n    { name: 'Home', to: '/' },\r\n    { name: 'Blogs', to: '/blogs' },\r\n    { name: 'Contact', to: '/contact' },\r\n  ];\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__wrapper\">\r\n        <Link to=\"/\" className='header__link-item'>\r\n          <div className=\"header__main-title\">\r\n            <div className=\"header__title\">CryptoFlowV1</div>\r\n            <div className=\"header__tagline\">Just send it!</div>\r\n          </div>\r\n        </Link>\r\n        <ActivateDeactivate />\r\n        <nav className=\"header__navbar\">\r\n          <ul className='header__list'>\r\n            {navbar.map((item) => (\r\n              <li key={item.name} className=\"header__link-container\">\r\n                <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                  <div className=\"header__link\">{item.name}</div>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useWeb3React } from '@web3-react/core';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\n\r\nconst Wrapper = (props: { children: ReactElement[] }) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-container-page-with-footer__wrapper\">\r\n        <div className=\"main-container-page-with-footer__content\">\r\n          {children[0]}\r\n        </div>\r\n        <div className=\"main-container-page-with-footer__body\">\r\n          {children[1]}\r\n        </div>\r\n        <div className=\"main-container-page-with-footer__footer\">\r\n          {children[2]}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { Outlet, Link } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Wrapper from \"../components/Wrapper/Wrapper\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        <Outlet />\r\n        <Footer />\r\n      </Wrapper>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Layout;","import React, { useState, CSSProperties } from 'react';\r\n\r\nimport {\r\n    useCSVReader,\r\n    lightenDarkenColor,\r\n    formatFileSize,\r\n    usePapaParse\r\n} from 'react-papaparse';\r\n\r\nconst GREY = '#CCC';\r\nconst GREY_LIGHT = 'rgba(255, 255, 255, 0.4)';\r\nconst DEFAULT_REMOVE_HOVER_COLOR = '#A01919';\r\nconst REMOVE_HOVER_COLOR_LIGHT = lightenDarkenColor(\r\n    DEFAULT_REMOVE_HOVER_COLOR,\r\n    40\r\n);\r\nconst GREY_DIM = '#686868';\r\n\r\nconst styles = {\r\n    zone: {\r\n        alignItems: 'center',\r\n        border: `2px dashed ${GREY}`,\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        color: 'white',\r\n    } as CSSProperties,\r\n    file: {\r\n        background: 'linear-gradient(to bottom, #EEE, #DDD)',\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        height: 120,\r\n        width: 120,\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n\r\n    } as CSSProperties,\r\n    info: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        color: 'blue'\r\n    } as CSSProperties,\r\n    size: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        marginBottom: '0.5em',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n    } as CSSProperties,\r\n    name: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        fontSize: 12,\r\n        marginBottom: '0.5em',\r\n    } as CSSProperties,\r\n    progressBar: {\r\n        bottom: 14,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n    } as CSSProperties,\r\n    zoneHover: {\r\n        borderColor: GREY_DIM,\r\n    } as CSSProperties,\r\n    default: {\r\n        borderColor: GREY,\r\n    } as CSSProperties,\r\n    remove: {\r\n        height: 23,\r\n        position: 'absolute',\r\n        right: 6,\r\n        top: 6,\r\n        width: 23,\r\n    } as CSSProperties,\r\n};\r\n\r\nexport default function CSVReader({ setValue, setAddresses, setAmounts }: any) {\r\n    const { CSVReader } = useCSVReader();\r\n    const [zoneHover, setZoneHover] = useState(false);\r\n    const [removeHoverColor, setRemoveHoverColor] = useState(\r\n        DEFAULT_REMOVE_HOVER_COLOR\r\n    );\r\n    const splitToArrays = (data: string[][]) => {\r\n        const addresses: string[] = [];\r\n        const values: string[] = [];\r\n        data.forEach((element, index) => {\r\n            addresses.push(element[0]);\r\n        });\r\n        data.forEach((element, index) => {\r\n            values.push(element[1]);\r\n        });\r\n        return { addresses, values }\r\n    }\r\n    return (\r\n        <CSVReader\r\n            onUploadAccepted={(results: { data: any[]; }) => {\r\n                setValue(results.data.join('\\r\\n'));\r\n                const { addresses, values } = splitToArrays(results.data);\r\n                setAddresses(addresses);\r\n                setAmounts(values);\r\n                console.log('---------------------------');\r\n                console.log(results);\r\n                console.log('---------------------------');\r\n                setZoneHover(false);\r\n            }}\r\n            onDragOver={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(true);\r\n            }}\r\n            onDragLeave={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(false);\r\n            }}\r\n        >\r\n            {({\r\n                getRootProps,\r\n                acceptedFile,\r\n                ProgressBar,\r\n                getRemoveFileProps,\r\n                Remove,\r\n            }: any) => (\r\n                <>\r\n                    <div\r\n                        {...getRootProps()}\r\n                        style={Object.assign(\r\n                            {},\r\n                            styles.zone,\r\n                            zoneHover && styles.zoneHover\r\n                        )}\r\n                    >\r\n                        {acceptedFile ? (\r\n                            <>\r\n\r\n                                <div style={styles.file}>\r\n                                    <div style={styles.info}>\r\n                                        <span style={styles.size}>\r\n                                            {formatFileSize(acceptedFile.size)}\r\n                                        </span>\r\n                                        <span style={styles.name}>{acceptedFile.name}</span>\r\n                                    </div>\r\n                                    <div style={styles.progressBar}>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                    <div\r\n                                        {...getRemoveFileProps()}\r\n                                        style={styles.remove}\r\n                                        onMouseOver={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(REMOVE_HOVER_COLOR_LIGHT);\r\n                                        }}\r\n                                        onMouseOut={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(DEFAULT_REMOVE_HOVER_COLOR);\r\n                                        }}\r\n                                    >\r\n                                        <Remove color={removeHoverColor} />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            'Drop CSV file here or click to upload'\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </CSVReader>\r\n    );\r\n}","import { SetStateAction, useEffect, useState } from 'react';\r\nimport CSVReader from '../CsvReader/CsvReader';\r\nimport { usePapaParse } from 'react-papaparse';\r\nimport { useMoralisWeb3Api } from \"react-moralis\";\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Provider } from '../../utils/provider';\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport multisenderV1 from './MultiSenderV1.json'\r\nimport ERC20 from './ERC20.json'\r\n\r\nconst CsvContainer: React.FC = () => {\r\n    const { readString } = usePapaParse();\r\n    const [value, setValue] = useState('');\r\n    const [loading, setLoading] = useState(true);\r\n    const [addresses, setAddresses] = useState(['']);\r\n    const [amounts, setAmounts] = useState<ethers.BigNumber[]>([]);\r\n    const [tokensList, setTokensList] = useState([{ label: '', value: '' }]);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const handleChange = (event:any) => setValue(event.target.value);\r\n    const multiSendContractAddress = \"0x92bDE003Ec04a593C57812Cc96070E0952823125\";\r\n    const Web3Api = useMoralisWeb3Api();\r\n    const context = useWeb3React<Provider>();\r\n    const { library, active, account, chainId } = context;\r\n\r\n    const splitToArrays = (data: string[][]) => {\r\n\r\n        const addresses: string[] = [];\r\n        const values: ethers.BigNumber[] = [];\r\n        data.forEach((element, index) => {\r\n            addresses.push(element[0]);\r\n        });\r\n        data.forEach((element, index) => {\r\n            values.push(ethers.utils.parseEther(element[1]));\r\n        });\r\n        return { addresses, values }\r\n    }\r\n\r\n\r\n    const fetchTokenBalances = async () => {\r\n        let netIdName, explorerUrl, nativeAssets: any;\r\n        const balance = await library!.getBalance(account!);\r\n        switch (chainId) {\r\n            case 1:\r\n                netIdName = 'mainnet'\r\n                explorerUrl = 'https://etherscan.io'\r\n                nativeAssets = 'ETH'\r\n                console.log('This is Foundation', chainId)\r\n                break;\r\n            case 3:\r\n                netIdName = 'ropsten'\r\n                explorerUrl = 'https://ropsten.etherscan.io'\r\n                nativeAssets = 'ETH'\r\n                console.log('This is Ropsten', chainId)\r\n                break;\r\n            case 4:\r\n                netIdName = 'rinkeby'\r\n                explorerUrl = 'https://rinkeby.etherscan.io'\r\n                console.log('This is Rinkeby', chainId)\r\n                break;\r\n            case 5:\r\n                netIdName = 'goerli'\r\n                explorerUrl = 'https://goerli.etherscan.io/'\r\n                console.log('This is goerli', chainId)\r\n                break;\r\n            case 42:\r\n                netIdName = 'Kovan'\r\n                explorerUrl = 'https://kovan.etherscan.io'\r\n                console.log('This is Kovan', chainId)\r\n                break;\r\n            case 56:\r\n                netIdName = 'binance smart chain'\r\n                explorerUrl = 'https://testnet.bscscan.com/'\r\n                nativeAssets = 'BNB'\r\n                console.log('This is binance mainnet', chainId)\r\n                break;\r\n            case 97:\r\n                netIdName = 'binance testnet'\r\n                explorerUrl = 'http://bscscan.com/'\r\n                nativeAssets = 'BNB'\r\n                console.log('This is binance test smart chain', chainId)\r\n                break;\r\n            default:\r\n                netIdName = 'Unknown'\r\n                console.log('This is an unknown network.', chainId)\r\n        }\r\n        const options: any = {\r\n            chain: netIdName,\r\n            address: account,\r\n        };\r\n\r\n        const balances = await Web3Api.account.getTokenBalances(options);\r\n        let tokens = balances.map((contract) => {\r\n            const { token_address, symbol, balance } = contract;\r\n            return { label: `${symbol} - ${ethers.utils.formatUnits(balance)} - ${token_address}`, value: token_address }\r\n        })\r\n\r\n        tokens.unshift({\r\n            value: nativeAssets,\r\n            label: `${nativeAssets} - ${(+ethers.utils.formatUnits(balance)).toFixed(4)}`\r\n        })\r\n        setTokensList(tokens)\r\n    };\r\n\r\n\r\n    const handleReadString = () => {\r\n        readString(value, {\r\n            worker: true,\r\n            complete: (results: { data: any[]; }) => {\r\n                const { addresses, values } = splitToArrays(results.data);\r\n                setAddresses(addresses);\r\n                setAmounts(values);\r\n                console.log('---------------------------');\r\n                console.log(results.data);\r\n                console.log('---------------------------');\r\n            },\r\n        });\r\n    };\r\n\r\n    const multiSend = (event: { preventDefault: () => void; }): void => {\r\n        event.preventDefault();\r\n\r\n        if (!multiSendContractAddress) {\r\n            window.alert('Undefined MultiSender contract');\r\n            return;\r\n        }\r\n\r\n\r\n        async function handleMultiSend(multiSendContractAddress: string): Promise<void> {\r\n\r\n            try {\r\n                const signer = library!.getSigner();\r\n                const multisSendContract = new ethers.Contract(multiSendContractAddress, multisenderV1.abi, signer);\r\n \r\n                const tokenContract = new ethers.Contract(selectedOption, ERC20, signer);\r\n                let result = amounts.reduce(function (sum: ethers.BigNumber, elem) {\r\n                    return sum.add(elem);\r\n                }, BigNumber.from(0));\r\n                console.log(result.toString());\r\n                console.log('data', selectedOption, addresses, amounts);\r\n                await tokenContract.approve(multiSendContractAddress, result)\r\n                const setMultisSendTxn = await multisSendContract.multiSend(selectedOption, addresses, amounts);\r\n\r\n                await setMultisSendTxn.wait();\r\n                // const newGreeting = await greeterContract.greet();\r\n                // window.alert(`Success!\\n\\nGreeting is now: ${newGreeting}`);\r\n\r\n                // if (newGreeting !== greeting) {\r\n                //     setGreeting(newGreeting);\r\n                // }\r\n            } catch (error: any) {\r\n                window.alert(\r\n                    'Error!' + (error && error.message ? `\\n\\n${error.message}` : '')\r\n                );\r\n            }\r\n        }\r\n\r\n        handleMultiSend(multiSendContractAddress);\r\n    }\r\n\r\n\r\n    const getValue = () => {\r\n        return selectedOption ? tokensList.find(c => c.value === selectedOption) : ''\r\n    }\r\n\r\n    const onChange = (newValue: any) => {\r\n        setSelectedOption(newValue.value)\r\n        console.log(newValue.value)\r\n    }\r\n\r\n    useEffect((): void => {\r\n        if (active) {\r\n            setSelectedOption('');\r\n            fetchTokenBalances();\r\n            setLoading(false);\r\n        } else {\r\n            setTokensList([{ label: '', value: '' }]);\r\n            setValue('');\r\n            setSelectedOption('');\r\n            setLoading(true);\r\n        }\r\n\r\n    }, [active, chainId, account]);\r\n\r\n    return (\r\n        <div className='csv-container'>\r\n            <div className='csv-container__item'>\r\n                <Select\r\n                    className='csv-container__select'\r\n                    value={getValue()}\r\n                    onChange={onChange}\r\n                    isLoading={loading}\r\n                    options={tokensList}\r\n                    placeholder=\"Loading your token addresses...\"\r\n                />\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <label className='csv-container__title' htmlFor='text-area'>Список адресов в формате csv </label>\r\n                <textarea className='csv-container__text-area' onBlur={() => handleReadString()} id=\"text-area\" name=\"csv-data\" value={value} onChange={handleChange}/>\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <CSVReader setValue={setValue} setAddresses={setAddresses} setAmounts={setAmounts} />\r\n            </div>\r\n            <button className='csv-container__button' onClick={multiSend} type='button'>Далее</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CsvContainer;","import { ActivateDeactivate } from \"../components/ActivateDeactivate/ActivateDeactivate\";\r\nimport CsvContainer from \"../components/CsvContainer/CsvContainer\";\r\n\r\nconst Home = () => {\r\n    return (\r\n      <>\r\n      <CsvContainer />\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Home;","const Blogs = () => {\r\n    return <h1>Blog Articles</h1>;\r\n  };\r\n  \r\n  export default Blogs;","const Contact = () => {\r\n    return <h1>Contact Me</h1>;\r\n  };\r\n  \r\n  export default Contact;","const NoPage = () => {\r\n    return <h1>{document.URL} not exist</h1>;\r\n  };\r\n  \r\n  export default NoPage;","import { ReactElement } from 'react';\r\nimport { BrowserRouter, Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Home from \"./pages/Home\";\r\nimport Blogs from \"./pages/Blogs\";\r\nimport Contact from \"./pages/Contact\";\r\nimport NoPage from \"./pages/NoPage\";\r\n\r\n\r\nexport function App(): ReactElement {\r\n  return (\r\n      <HashRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />}>\r\n            <Route index element={<Home />} />\r\n            <Route path=\"blogs\" element={<Blogs />} />\r\n            <Route path=\"contact\" element={<Contact />} />\r\n            <Route path=\"*\" element={<NoPage />} />\r\n          </Route>\r\n        </Routes>\r\n      </HashRouter>\r\n  );\r\n}\r\n","import { Web3ReactProvider } from '@web3-react/core';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './index.scss';\r\nimport { getProvider } from './utils/provider';\r\nimport { MoralisProvider } from \"react-moralis\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Web3ReactProvider getLibrary={getProvider}>\r\n      <MoralisProvider serverUrl=\"https://ycdrwalsmowu.usemoralis.com:2053/server\" appId=\"OMmCccFisfG41m6CAL0NUsZIjyn959QUTkPv89Jg\">\r\n        <App />\r\n      </MoralisProvider>\r\n    </Web3ReactProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","import type { Web3Provider as ProviderType } from '@ethersproject/providers';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\nexport function getProvider(provider: any): ProviderType {\r\n  const web3Provider = new Web3Provider(provider);\r\n  web3Provider.pollingInterval = 1000;\r\n  return web3Provider;\r\n}\r\n\r\nexport type Provider = ProviderType;\r\n"],"sourceRoot":""}