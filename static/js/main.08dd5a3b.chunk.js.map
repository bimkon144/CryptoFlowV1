{"version":3,"sources":["components/Footer/Footer.tsx","utils/connectors.ts","components/ActivateDeactivate/ActivateDeactivate.tsx","components/Header/Header.tsx","components/Wrapper/Wrapper.tsx","pages/Layout.js","store/WebStore.tsx","components/CsvReader/CsvReader.tsx","components/CsvContainer/CsvContainer.tsx","pages/Home.js","pages/Blogs.js","pages/Contact.js","pages/NoPage.js","App.tsx","index.tsx","utils/provider.ts"],"names":["Footer","className","name","to","map","item","injected","InjectedConnector","supportedChainIds","StyledActivateDeactivateDiv","styled","div","StyledActivateButton","button","StyledDeactivateButton","Activate","context","useWeb3React","activate","active","useState","activating","setActivating","disabled","style","cursor","borderColor","padding","border","onClick","event","preventDefault","_activate","Deactivate","deactivate","ActivateDeactivate","error","window","alert","errorMessage","constructor","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestError","message","getErrorMessage","Header","Wrapper","props","children","Layout","addresses","amounts","textAreaPlaceholder","tokenList","label","value","makeAutoObservable","this","data","values","forEach","element","index","push","ethers","utils","parseEther","join","tokens","GREY","GREY_LIGHT","DEFAULT_REMOVE_HOVER_COLOR","REMOVE_HOVER_COLOR_LIGHT","lightenDarkenColor","styles","zone","alignItems","borderRadius","display","flexDirection","height","justifyContent","color","file","background","width","position","zIndex","info","paddingLeft","paddingRight","size","backgroundColor","marginBottom","fontSize","progressBar","bottom","zoneHover","default","remove","right","top","CSVReader","useCSVReader","setZoneHover","removeHoverColor","setRemoveHoverColor","onUploadAccepted","results","WebStore","setData","setTextAreaPlaceholder","onDragOver","onDragLeave","getRootProps","acceptedFile","ProgressBar","getRemoveFileProps","Remove","Object","assign","formatFileSize","onMouseOver","onMouseOut","CsvContainer","observer","readString","usePapaParse","library","account","chainId","multiSendContractAddress","loading","setLoading","selectedOption","setSelectedOption","Web3Api","useMoralisWeb3Api","fetchTokenBalances","getBalance","balance","netIdName","nativeAssets","nativeAssetsAddress","console","log","options","chain","address","getTokenBalances","balances","contract","token_address","symbol","formatUnits","toFixed","unshift","setTokensList","useEffect","find","c","onChange","newValue","isLoading","isDisabled","placeholder","htmlFor","onBlur","worker","complete","id","target","signer","getSigner","multisSendContract","Contract","multisenderV1","abi","tokenContract","ERC20","result","reduce","sum","elem","add","BigNumber","from","multiSendNativeToken","approve","approved","wait","multiSendToken","txdone","handleMultiSend","type","Home","Blogs","Contact","NoPage","document","URL","App","path","ReactDOM","render","StrictMode","getLibrary","provider","web3Provider","Web3Provider","pollingInterval","serverUrl","appId","getElementById"],"mappings":"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","file":"static/js/main.08dd5a3b.chunk.js","sourcesContent":["import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer: FC = () => {\r\n  const navbarRight = [\r\n    { name: '', to: '/' },\r\n    { name: '', to: '/blogs' },\r\n    { name: '', to: '/contact' },\r\n  ];\r\n  const navbarLeft = [\r\n    { name: '', to: '/' },\r\n    { name: '', to: '/blogs' },\r\n    { name: '', to: '/contact' },\r\n  ];\r\n  return (\r\n    <header className=\"header\">\r\n      <nav className=\"header__navbar\">\r\n        <ul className='header__list'>\r\n          {navbarLeft.map((item) => (\r\n            <li key={item.name} className=\"header__link-container\">\r\n              <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                <div className=\"header__link\">{item.name}</div>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n      <nav className=\"header__navbar\">\r\n        <ul className='header__list'>\r\n          {navbarRight.map((item) => (\r\n            <li key={item.name} className=\"header__link-container\">\r\n              <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                <div className=\"header__link\">{item.name}</div>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 56, 97, 31337]\r\n});\r\n","import { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError\r\n} from '@web3-react/injected-connector';\r\nimport { MouseEvent, ReactElement, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { injected } from '../../utils/connectors';\r\nimport { useEagerConnect, useInactiveListener } from '../../utils/hooks';\r\nimport { Provider } from '../../utils/provider';\r\n\r\ntype ActivateFunction = (\r\n  connector: AbstractConnector,\r\n  onError?: (error: Error) => void,\r\n  throwErrors?: boolean\r\n) => Promise<void>;\r\n\r\nfunction getErrorMessage(error: Error): string {\r\n  let errorMessage: string;\r\n\r\n  switch (error.constructor) {\r\n    case NoEthereumProviderError:\r\n      errorMessage = `No Ethereum browser extension detected. Please install MetaMask extension.`;\r\n      break;\r\n    case UnsupportedChainIdError:\r\n      errorMessage = `You're connected to an unsupported network.`;\r\n      break;\r\n    case UserRejectedRequestError:\r\n      errorMessage = `Please authorize this website to access your Ethereum account.`;\r\n      break;\r\n    default:\r\n      errorMessage = error.message;\r\n  }\r\n\r\n  return errorMessage;\r\n}\r\n\r\nconst StyledActivateDeactivateDiv = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n  place-self: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledActivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: green;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledDeactivateButton = styled.button`\r\n  width: 150px;\r\n  height: 2rem;\r\n  border-radius: 1rem;\r\n  border-color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction Activate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { activate, active } = context;\r\n\r\n  const [activating, setActivating] = useState<boolean>(false);\r\n\r\n  function handleActivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    async function _activate(activate: ActivateFunction): Promise<void> {\r\n      setActivating(true);\r\n      await activate(injected);\r\n      setActivating(false);\r\n    }\r\n\r\n    _activate(activate);\r\n    \r\n  }\r\n\r\n  // // handle logic to eagerly connect to the injected ethereum provider, if it exists and has\r\n  // // granted access already\r\n  // const eagerConnectionSuccessful = useEagerConnect();\r\n\r\n  // // handle logic to connect in reaction to certain events on the injected ethereum provider,\r\n  // // if it exists\r\n  // useInactiveListener(!eagerConnectionSuccessful);\r\n\r\n  return (\r\n    <StyledActivateButton\r\n      disabled={active}\r\n      style={{\r\n        cursor: active ? 'not-allowed' : 'pointer',\r\n        borderColor: activating ? 'orange' : active ? 'unset' : 'green',\r\n        padding: 0,\r\n        border: \"none\"\r\n      }}\r\n      onClick={handleActivate}\r\n    >\r\n      Connect\r\n    </StyledActivateButton>\r\n  );\r\n}\r\n\r\nfunction Deactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { deactivate, active } = context;\r\n\r\n  function handleDeactivate(event: MouseEvent<HTMLButtonElement>): void {\r\n    event.preventDefault();\r\n\r\n    deactivate();\r\n  }\r\n\r\n  return (\r\n    <StyledDeactivateButton\r\n      disabled={!active}\r\n      style={{\r\n        cursor: active ? 'pointer' : 'not-allowed',\r\n        borderColor: active ? 'red' : 'unset',\r\n        padding: 0,\r\n        border: \"none\"\r\n      }}\r\n      onClick={handleDeactivate}\r\n    >\r\n      Disconnect\r\n    </StyledDeactivateButton>\r\n  );\r\n}\r\n\r\nexport function ActivateDeactivate(): ReactElement {\r\n  const context = useWeb3React<Provider>();\r\n  const { error } = context;\r\n\r\n  if (!!error) {\r\n    window.alert(getErrorMessage(error));\r\n  }\r\n\r\n  return (\r\n    <StyledActivateDeactivateDiv>\r\n      <Activate />\r\n      <Deactivate />\r\n    </StyledActivateDeactivateDiv>\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ActivateDeactivate } from '../ActivateDeactivate/ActivateDeactivate';\r\n\r\nconst Header: FC = () => {\r\n  const navbar = [\r\n    { name: '', to: '/' },\r\n    { name: '', to: '/blogs' },\r\n    { name: '', to: '/contact' },\r\n  ];\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__wrapper\">\r\n        <Link to=\"/\" className='header__link-item'>\r\n          <div className=\"header__main-title\">\r\n            <div className=\"header__title\">CryptoFlowV1</div>\r\n            <div className=\"header__tagline\">Just send it!</div>\r\n          </div>\r\n        </Link>\r\n        <ActivateDeactivate />\r\n        <nav className=\"header__navbar\">\r\n          <ul className='header__list'>\r\n            {navbar.map((item) => (\r\n              <li key={item.name} className=\"header__link-container\">\r\n                <Link to={item.to} key={item.name} className=\"header__link-item\">\r\n                  <div className=\"header__link\">{item.name}</div>\r\n                </Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useWeb3React } from '@web3-react/core';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\n\r\nconst Wrapper = (props: { children: ReactElement[] }) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"main-container-page-with-footer__wrapper\">\r\n        <div className=\"main-container-page-with-footer__content\">\r\n          {children[0]}\r\n        </div>\r\n        <div className=\"main-container-page-with-footer__body\">\r\n          {children[1]}\r\n        </div>\r\n        <div className=\"main-container-page-with-footer__footer\">\r\n          {children[2]}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Wrapper;\r\n","import { Outlet, Link } from \"react-router-dom\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Wrapper from \"../components/Wrapper/Wrapper\";\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        <Outlet />\r\n        <Footer />\r\n      </Wrapper>\r\n\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Layout;","import { ethers } from \"ethers\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\n// Standard interface and functions\r\ninterface Todo {\r\n  id: number;\r\n  text: string;\r\n  done: boolean;\r\n}\r\n\r\n\r\n\r\n\r\nclass WebStore {\r\n\r\n  addresses: string[] = [];\r\n  amounts: ethers.BigNumber[] = [];\r\n  textAreaPlaceholder: string = '';\r\n  tokenList = [{ label: '', value: '' }];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setData(data: string[][]) {\r\n    const addresses: string[] = [];\r\n    const values: ethers.BigNumber[] = [];\r\n    data.forEach((element, index) => {\r\n      addresses.push(element[0]);\r\n    });\r\n    data.forEach((element, index) => {\r\n      values.push(ethers.utils.parseEther(element[1]));\r\n    });\r\n    this.addresses = addresses;\r\n    this.amounts = values;\r\n  }\r\n\r\n  setTextAreaPlaceholder(data: string[][]) {\r\n    this.textAreaPlaceholder = data.join('\\r\\n')\r\n  }\r\n\r\n  setTokensList(tokens: { label: string, value: string }[]) {\r\n    this.tokenList = tokens;\r\n  }\r\n\r\n  // load(url: string) {\r\n  //   fetch(url)\r\n  //     .then((resp) => resp.json())\r\n  //     .then((tds: Todo[]) => (store.todos = tds));\r\n  // }\r\n}\r\n\r\n\r\nexport default new WebStore();","import React, { useState, CSSProperties } from 'react';\r\nimport WebStore from \"../../store/WebStore\";\r\n\r\nimport {\r\n    useCSVReader,\r\n    lightenDarkenColor,\r\n    formatFileSize,\r\n    usePapaParse\r\n} from 'react-papaparse';\r\n\r\nconst GREY = '#CCC';\r\nconst GREY_LIGHT = 'rgba(255, 255, 255, 0.4)';\r\nconst DEFAULT_REMOVE_HOVER_COLOR = '#A01919';\r\nconst REMOVE_HOVER_COLOR_LIGHT = lightenDarkenColor(\r\n    DEFAULT_REMOVE_HOVER_COLOR,\r\n    40\r\n);\r\nconst GREY_DIM = '#686868';\r\n\r\nconst styles = {\r\n    zone: {\r\n        alignItems: 'center',\r\n        border: `2px dashed ${GREY}`,\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n        padding: 20,\r\n        color: 'white',\r\n    } as CSSProperties,\r\n    file: {\r\n        background: 'linear-gradient(to bottom, #EEE, #DDD)',\r\n        borderRadius: 20,\r\n        display: 'flex',\r\n        height: 120,\r\n        width: 120,\r\n        position: 'relative',\r\n        zIndex: 10,\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n\r\n    } as CSSProperties,\r\n    info: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        color: 'blue'\r\n    } as CSSProperties,\r\n    size: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        marginBottom: '0.5em',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n    } as CSSProperties,\r\n    name: {\r\n        backgroundColor: GREY_LIGHT,\r\n        borderRadius: 3,\r\n        fontSize: 12,\r\n        marginBottom: '0.5em',\r\n    } as CSSProperties,\r\n    progressBar: {\r\n        bottom: 14,\r\n        position: 'absolute',\r\n        width: '100%',\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n    } as CSSProperties,\r\n    zoneHover: {\r\n        borderColor: GREY_DIM,\r\n    } as CSSProperties,\r\n    default: {\r\n        borderColor: GREY,\r\n    } as CSSProperties,\r\n    remove: {\r\n        height: 23,\r\n        position: 'absolute',\r\n        right: 6,\r\n        top: 6,\r\n        width: 23,\r\n    } as CSSProperties,\r\n};\r\n\r\nconst  CSVReader = () => {\r\n    const { CSVReader } = useCSVReader();\r\n    const [zoneHover, setZoneHover] = useState(false);\r\n    const [removeHoverColor, setRemoveHoverColor] = useState(\r\n        DEFAULT_REMOVE_HOVER_COLOR\r\n    );\r\n\r\n    return (\r\n        <CSVReader\r\n            onUploadAccepted={(results: { data: any[]; }) => {\r\n                WebStore.setData(results.data)\r\n                WebStore.setTextAreaPlaceholder(results.data)\r\n                setZoneHover(false);\r\n            }}\r\n            onDragOver={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(true);\r\n            }}\r\n            onDragLeave={(event: DragEvent) => {\r\n                event.preventDefault();\r\n                setZoneHover(false);\r\n            }}\r\n        >\r\n            {({\r\n                getRootProps,\r\n                acceptedFile,\r\n                ProgressBar,\r\n                getRemoveFileProps,\r\n                Remove,\r\n            }: any) => (\r\n                <>\r\n                    <div\r\n                        {...getRootProps()}\r\n                        style={Object.assign(\r\n                            {},\r\n                            styles.zone,\r\n                            zoneHover && styles.zoneHover\r\n                        )}\r\n                    >\r\n                        {acceptedFile ? (\r\n                            <>\r\n\r\n                                <div style={styles.file}>\r\n                                    <div style={styles.info}>\r\n                                        <span style={styles.size}>\r\n                                            {formatFileSize(acceptedFile.size)}\r\n                                        </span>\r\n                                        <span style={styles.name}>{acceptedFile.name}</span>\r\n                                    </div>\r\n                                    <div style={styles.progressBar}>\r\n                                        <ProgressBar />\r\n                                    </div>\r\n                                    <div\r\n                                        {...getRemoveFileProps()}\r\n                                        style={styles.remove}\r\n                                        onMouseOver={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(REMOVE_HOVER_COLOR_LIGHT);\r\n                                        }}\r\n                                        onMouseOut={(event: Event) => {\r\n                                            event.preventDefault();\r\n                                            setRemoveHoverColor(DEFAULT_REMOVE_HOVER_COLOR);\r\n                                        }}\r\n                                    >\r\n                                        <Remove color={removeHoverColor} />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            'Drop CSV file here or click to upload'\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </CSVReader>\r\n    );\r\n}\r\n\r\nexport default CSVReader;","import { SetStateAction, useEffect, useState } from 'react';\r\nimport CSVReader from '../CsvReader/CsvReader';\r\nimport { usePapaParse } from 'react-papaparse';\r\nimport { useMoralisWeb3Api } from \"react-moralis\";\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { Provider } from '../../utils/provider';\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport multisenderV1 from './MultiSenderV1.json'\r\nimport ERC20 from './ERC20.json'\r\nimport { observer } from 'mobx-react-lite';\r\nimport WebStore from \"../../store/WebStore\";\r\n\r\n\r\nconst CsvContainer: React.FC = observer(() => {\r\n    const { readString } = usePapaParse();\r\n    const context = useWeb3React<Provider>();\r\n    const { library, active, account, chainId } = context;\r\n    const multiSendContractAddress = \"0xe776C27ebFe7D0Eb741aD3Ab113Bbcb5659396f5\";\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n\r\n\r\n    const Web3Api = useMoralisWeb3Api();\r\n\r\n    const fetchTokenBalances = async () => {\r\n        let netIdName,  nativeAssets, nativeAssetsAddress: any;\r\n        const balance = await library!.getBalance(account!);\r\n        switch (chainId) {\r\n            case 56:\r\n                netIdName = 'binance smart chain'\r\n                nativeAssets = 'BNB'\r\n                nativeAssetsAddress = '0xB8c77482e45F1F44dE1745F52C74426C631bDD52'\r\n                console.log('This is binance mainnet', chainId)\r\n                break;\r\n            case 97:\r\n                netIdName = 'binance testnet'\r\n                nativeAssets = 'BNB'\r\n                nativeAssetsAddress = '0x62b35Eb73edcb96227F666A878201b2cF915c2B5'\r\n                console.log('This is binance test smart chain', chainId)\r\n                break;\r\n            default:\r\n                netIdName = 'Unknown'\r\n                console.log('This is an unknown network.', chainId)\r\n        }\r\n        const options: any = {\r\n            chain: netIdName,\r\n            address: account,\r\n        };\r\n\r\n        const balances = await Web3Api.account.getTokenBalances(options);\r\n        let tokens = balances.map((contract) => {\r\n            const { token_address, symbol, balance } = contract;\r\n            return { label: `${symbol} - ${(+ethers.utils.formatUnits(balance)).toFixed(4)} - ${token_address}`, value: token_address }\r\n        })\r\n\r\n        tokens.unshift({\r\n            value: nativeAssetsAddress,\r\n            label: `${nativeAssets} - ${(+ethers.utils.formatUnits(balance)).toFixed(4)}`\r\n        })\r\n        WebStore.setTokensList(tokens);\r\n    };\r\n\r\n\r\n    const handleReadString = () => {\r\n        readString(WebStore.textAreaPlaceholder, {\r\n            worker: true,\r\n            complete: (results: { data: any[]; }) => {\r\n                WebStore.setData(results.data);\r\n            },\r\n        });\r\n    };\r\n\r\n    const multiSend = (event: { preventDefault: () => void; }): void => {\r\n        event.preventDefault();\r\n\r\n        if (!multiSendContractAddress) {\r\n            window.alert('Undefined MultiSender contract');\r\n            return;\r\n        }\r\n        async function handleMultiSend(multiSendContractAddress: string): Promise<void> {\r\n\r\n            try {\r\n                const signer = library!.getSigner();\r\n                const multisSendContract = new ethers.Contract(multiSendContractAddress, multisenderV1.abi, signer);\r\n\r\n                const tokenContract = new ethers.Contract(selectedOption, ERC20, signer);\r\n                let result = WebStore.amounts.reduce(function (sum: ethers.BigNumber, elem) {\r\n                    return sum.add(elem);\r\n                }, BigNumber.from(0));\r\n                if (selectedOption === WebStore.tokenList[0].value) {\r\n                    console.log('fire');\r\n                    await multisSendContract.multiSendNativeToken(WebStore.addresses, WebStore.amounts, { value: result });\r\n                } else {\r\n                    console.log('approve', (+ethers.utils.formatUnits(result)));\r\n                    const approved = await tokenContract.approve(multiSendContractAddress, result)\r\n                    await approved.wait();\r\n                    const txdone = await multisSendContract.multiSendToken(selectedOption, WebStore.addresses, WebStore.amounts);\r\n                    await txdone.wait();\r\n                    fetchTokenBalances();\r\n                }\r\n\r\n            } catch (error: any) {\r\n                window.alert(\r\n                    'Error!' + (error && error.message ? `\\n\\n${error.message}` : '')\r\n                );\r\n            }\r\n        }\r\n        handleMultiSend(multiSendContractAddress);\r\n    }\r\n\r\n\r\n    const getValue = () => {\r\n        return selectedOption ? WebStore.tokenList.find(c => c.value === selectedOption) : ''\r\n    }\r\n\r\n    const onChange = (newValue: any) => {\r\n        setSelectedOption(newValue.value)\r\n        console.log(newValue.value)\r\n    }\r\n\r\n    const handleChange = (event: any) => WebStore.textAreaPlaceholder = (event.target.value);\r\n\r\n    useEffect((): void => {\r\n        if (active) {\r\n            setSelectedOption('');\r\n            fetchTokenBalances();\r\n            setLoading(false);\r\n        } else {\r\n            WebStore.setTokensList([{ label: '', value: '' }]);\r\n            WebStore.textAreaPlaceholder = ('');\r\n            setSelectedOption('');\r\n            setLoading(true);\r\n        }\r\n\r\n    }, [active, chainId, account]);\r\n\r\n    return (\r\n        <div className='csv-container'>\r\n            <div className='csv-container__item'>\r\n                <Select\r\n                    className='csv-container__select'\r\n                    value={getValue()}\r\n                    onChange={onChange}\r\n                    isLoading={loading}\r\n                    options={WebStore.tokenList}\r\n                    isDisabled={WebStore.tokenList[0].label == '' ? true : false}\r\n                    placeholder={WebStore.tokenList[0].label == '' ? \"Loading your token addresses...\" : \"Your tokens are loaded\"}\r\n                />\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <label className='csv-container__title' htmlFor='text-area'>Список адресов в формате csv </label>\r\n                <textarea className='csv-container__text-area' onBlur={() => handleReadString()} id=\"text-area\" name=\"csv-data\" value={WebStore.textAreaPlaceholder} onChange={handleChange} />\r\n            </div>\r\n            <div className='csv-container__item'>\r\n                <CSVReader />\r\n            </div>\r\n            <button className='csv-container__button' onClick={multiSend} type='button'>Далее</button>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default CsvContainer;","import { ActivateDeactivate } from \"../components/ActivateDeactivate/ActivateDeactivate\";\r\nimport CsvContainer from \"../components/CsvContainer/CsvContainer\";\r\n\r\nconst Home = () => {\r\n    return (\r\n      <>\r\n      <CsvContainer />\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Home;","const Blogs = () => {\r\n    return <h1>Blog Articles</h1>;\r\n  };\r\n  \r\n  export default Blogs;","const Contact = () => {\r\n    return <h1>Contact Me</h1>;\r\n  };\r\n  \r\n  export default Contact;","const NoPage = () => {\r\n    return <h1>{document.URL} not exist</h1>;\r\n  };\r\n  \r\n  export default NoPage;","import { ReactElement } from 'react';\r\nimport { BrowserRouter, Routes, Route, HashRouter } from \"react-router-dom\";\r\nimport Layout from \"./pages/Layout\";\r\nimport Home from \"./pages/Home\";\r\nimport Blogs from \"./pages/Blogs\";\r\nimport Contact from \"./pages/Contact\";\r\nimport NoPage from \"./pages/NoPage\";\r\n\r\n\r\nexport function App(): ReactElement {\r\n  return (\r\n      <HashRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />}>\r\n            <Route index element={<Home />} />\r\n            <Route path=\"blogs\" element={<Blogs />} />\r\n            <Route path=\"contact\" element={<Contact />} />\r\n            <Route path=\"*\" element={<NoPage />} />\r\n          </Route>\r\n        </Routes>\r\n      </HashRouter>\r\n  );\r\n}\r\n","import { Web3ReactProvider } from '@web3-react/core';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './index.scss';\r\nimport { getProvider } from './utils/provider';\r\nimport { MoralisProvider } from \"react-moralis\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Web3ReactProvider getLibrary={getProvider}>\r\n      <MoralisProvider serverUrl=\"https://ycdrwalsmowu.usemoralis.com:2053/server\" appId=\"OMmCccFisfG41m6CAL0NUsZIjyn959QUTkPv89Jg\">\r\n        <App />\r\n      </MoralisProvider>\r\n    </Web3ReactProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","import type { Web3Provider as ProviderType } from '@ethersproject/providers';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\n\r\nexport function getProvider(provider: any): ProviderType {\r\n  const web3Provider = new Web3Provider(provider);\r\n  web3Provider.pollingInterval = 1000;\r\n  return web3Provider;\r\n}\r\n\r\nexport type Provider = ProviderType;\r\n"],"sourceRoot":""}