{"version":3,"sources":["../node_modules/bs58/index.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/createClass.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/inherits.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/typeof.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../src/Layout.ts","../../src/utils.ts","../../src/error.ts","../../src/struct.ts","../../src/structs/utilities.ts","../../src/structs/types.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../../src/structs/coercions.ts","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/bpf-loader-deprecated.ts","../../src/transaction-constants.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/transaction.ts","../../src/util/assert.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/util/bigint.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../src/compute-budget.ts","../../node_modules/fast-stable-stringify/index.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/__forks__/browser/fetch-impl.ts","../../src/util/tx-expiry-custom-errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../node_modules/@solana/web3.js/node_modules/bn.js/lib/bn.js","../node_modules/base-x/src/index.js","../node_modules/borsh/lib/index.js","../node_modules/borsh/node_modules/bn.js/lib/bn.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../node_modules/bigint-buffer/dist/browser.js","../node_modules/rpc-websockets/dist/index.browser.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/rpc-websockets/dist/lib/client/websocket.browser.js","../node_modules/rpc-websockets/dist/lib/client.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/regenerator/index.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/rpc-websockets/node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/jayson/lib/client/browser/index.js","../node_modules/jayson/lib/generateRequest.js","../node_modules/@solana/web3.js/node_modules/secp256k1/elliptic.js","../node_modules/@solana/web3.js/node_modules/secp256k1/lib/index.js","../node_modules/@solana/web3.js/node_modules/secp256k1/lib/elliptic.js","../../src/rpc/JrpcClient.ts","../../src/rpc/solanaRpcMiddlewares.ts","../../src/providers/injectedProviders/base/baseInjectedProvider.ts","../../src/providers/injectedProviders/base/providerHandlers.ts","../../src/providers/injectedProviders/injectedProviderProxy.ts","../../src/providers/injectedProviders/phantom/phantomInjectedProvider.ts","../../src/providers/injectedProviders/slope/slopeInjectedProvider.ts","../../src/providers/injectedProviders/slope/providerHandlers.ts","../../src/providers/injectedProviders/solflare/solflareInjectedProvider.ts","../../src/providers/injectedProviders/solflare/providerHandlers.ts","../../src/providers/injectedProviders/sollet/solletInjectedProvider.ts","../../src/providers/injectedProviders/sollet/providerHandlers.ts","../../src/providers/injectedProviders/torus/providerHandlers.ts","../../src/providers/injectedProviders/torus/torusInjectedProvider.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyUtils.ts","../../src/providers/privateKeyProvider/solanaPrivateKeyProvider.ts","../../src/solanaWallet.ts"],"names":["basex","require","module","exports","obj","__esModule","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","instance","TypeError","setPrototypeOf","subClass","superClass","create","constructor","value","_typeof","assertThisInitialized","self","call","Symbol","iterator","_getPrototypeOf","o","getPrototypeOf","bind","__proto__","Layout","n","b","discr","span","this","offset","toFailures","run","StructError","failure","failures","rest","path","msg","cached","isObject","x","print","JSON","shiftIterator","input","done","undefined","toFailure","result","context","struct","message","branch","type","refinement","r","options","coerce","mask","ctx","Array","valid","ts","v","s","k","t","Struct","coercer","entries","schema","validator","refiner","assert","is","validate","tuples","tuple","error","f","define","name","array","Element","boolean","Class","literal","constant","description","never","nullable","number","isNaN","optional","record","Key","Value","string","Elements","Never","Math","keys","union","Structs","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","unknown","condition","toBuffer","Buffer","val","Error","equal","l","inherits_browserModule","ctor","superCtor","super_","TempCtor","require$$0","require$$1","isSurrogatePair","charCodeAt","htonl","w","zero2","word","zero8","utils","enc","isArray","slice","res","replace","push","parseInt","p","c","toString","endian","start","end","len","m","a","d","e","buf","pos","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","update","toArray","concat","join32","_update","digest","_pad","_digest","bytes","rotr32","ch32","y","z","maj32","p32","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","h","W","inherits","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","j","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","LogLevel","ErrorCode","_normalizeError","missing","forEach","form","normalize","join","String","fromCharCode","_checkNormalize","HEX","version","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","Logger","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","Uint8Array","hex","stringify","reason","url","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","UNSUPPORTED_OPERATION","operation","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","kind","censorship","permanent","globalLogger","warn","logger","addSlice","arguments","isInteger","arrayify","checkSafeUint53","unshift","allowMissingPrefix","substring","toHexString","isHexable","match","isHexString","hexPad","isBytes","data","encode","serialize","SOLANA_SCHEMA","decode","deserialize","decodeUnchecked","deserializeUnchecked","Map","_bn","isPublicKeyData","decoded","bs58","equals","eq","publicKey","toBase58","toJSON","toBytes","toArrayLike","zeroPad","createWithSeed","buffer","fromPublicKey","programId","PublicKey","createProgramAddressSync","seeds","seed","publicKeyBytes","is_on_curve","createProgramAddress","findProgramAddressSync","nonce","seedsWithNonce","address","err","findProgramAddress","isOnCurve","default","fields","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","PACKET_DATA_SIZE","property","BufferLayout","rustString","rsl","_decode","_encode","rslShim","chars","str","decodeLength","size","elem","encodeLength","rem_len","header","accountKeys","recentBlockhash","instructions","indexToProgramIds","account","ix","isAccountSigner","index","isAccountWritable","numRequiredSignatures","isProgramId","has","programIds","nonProgramIds","filter","numKeys","keyCount","shortvec","map","instruction","programIdIndex","keyIndicesCount","accounts","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","transaction","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","signData","from","byteArray","accountCount","dataSlice","Message","TransactionStatus","DEFAULT_SIGNATURE","opts","isWritable","pubkey","isSigner","signatures","feePayer","lastValidBlockHeight","nonceInfo","_message","_json","newOpts","oldOpts","signature","nonceInstruction","signers","add","items","item","compileMessage","accountMetas","accountMeta","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","meta","invariant","keyIndex","_compile","every","pair","serializeMessage","getEstimatedFee","connection","setSigners","seen","sign","uniqueSigners","signer","_partialSign","partialSign","addSignature","_addSignature","findIndex","sigpair","verifySignatures","_verifySignatures","requireAllSignatures","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","Transaction","populate","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendOptions","skipPreflight","preflightCommitment","maxRetries","blockhash","status","sleep","ms","Promise","resolve","setTimeout","encodeData","allocLength","alloc","layoutFields","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","NonceAccount","u64","layout","blob","encodeDecode","bigIntLayout","src","toBigIntLE","toBufferLE","bigInt","SYSTEM_INSTRUCTION_LAYOUTS","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","createAccount","lamports","space","transfer","BigInt","assign","base","createAccountWithSeed","createNonceAccount","SystemProgram","fromPubkey","newAccountPubkey","basePubkey","initParams","noncePubkey","nonceInitialize","authorized","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","getMinNumSignatures","Loader","load","balanceNeeded","program","programInfo","accountPubkey","payer","toPubkey","sendAndConfirmTransaction","commitment","dataLayout","chunkSize","transactions","bytesLength","bytesLengthPadding","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","RequestUnits","RequestHeapFrame","SetComputeUnitLimit","SetComputeUnitPrice","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","microLamports","ComputeBudgetProgram","objToString","objKeys","isArrayProp","max","propVal","toStr","sort","isFinite","returnVal","trailingZeros","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","slot","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","logs","globalThis","TransactionExpiredBlockheightExceededError","timeoutSeconds","TransactionExpiredTimeoutError","PublicKeyFromString","RawAccountDataResult","BufferFromRawAccountData","createRpcResult","pick","jsonrpc","id","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","amount","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","GetLeaderScheduleResult","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","executable","owner","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","total","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","decimals","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","state","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","rpc","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","logMessages","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","GetRecentPerformanceSamplesRpcResult","numTransactions","numSlots","samplePeriodSecs","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","Set","client","URL","commitmentOrConfig","wsEndpoint","httpHeaders","fetch","fetchMiddleware","disableRetryOnRateLimit","endpoint","useHttps","Number","makeWebsocketUrl","customFetch","fetchWithMiddleware","init","modifiedInfo","reject","modifiedFetchArgs","clientBrowser","method","body","agent","headers","too_many_requests_retries","waitTime","statusText","text","callback","createRpcClient","requests","batch","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","_buildArgs","unsafeRes","getBalance","getBlockTime","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","config","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","_args","ownerAddress","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getAccountInfo","getMultipleAccountsInfoAndContext","publicKeys","getMultipleAccountsInfo","getStakeActivation","getProgramAccounts","extra","configOrCommitment","encoding","getParsedProgramAccounts","confirmTransaction","rawSignature","strategy","decodedSignature","subscriptionCommitment","confirmationPromise","subscriptionId","response","__type","checkBlockHeight","expiryPromise","timeoutMs","timeoutId","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","outcome","clearTimeout","removeSignatureListener","getClusterNodes","getVoteAccounts","getSlot","getSlotLeader","getSlotLeaders","startSlot","getSignatureStatus","getSignatureStatuses","values","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","addresses","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getMinimumBalanceForRentExemption","getRecentBlockhashAndContext","getRecentPerformanceSamples","limit","getFeeCalculatorForBlockhash","getFeeForMessage","wireMessage","getRecentBlockhash","getLatestBlockhash","getLatestBlockhashAndContext","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","getBlockHeight","getBlockProduction","getTransaction","getParsedTransaction","getParsedTransactions","methodName","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","transactionDetails","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","highestConfirmedRoot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getSignaturesForAddress","getNonceAndContext","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","timeSinceFetch","Date","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","MS_PER_SLOT","simulateTransaction","transactionOrMessage","originalTx","disableCache","includes","encodedTransaction","includeAccounts","logTrace","traceIndent","sendTransaction","sendRawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","clearInterval","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbacks","cb","_makeSubscription","clientSubscriptionId","fastStableStringify","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","notification","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","dispose","override","onSignature","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","_keypair","keypair","secretKey","generate","Keypair","fromSecretKey","encoder","fromSeed","ED25519_INSTRUCTION_LAYOUT","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","Ed25519Program","createInstructionWithPrivateKey","privateKey","STAKE_CONFIG_ID","unixTimestamp","custodian","Lockup","STAKE_INSTRUCTION_LAYOUTS","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","Staker","Withdrawer","initialize","lockup","staker","withdrawer","stakePubkey","delegate","authorize","custodianPubkey","newAuthorized","newAuthorizedPubkey","stakeAuthorizationType","authorizeWithSeed","authoritySeed","authorityOwner","splitInstruction","split","splitWithSeed","splitStakePubkey","merge","withdraw","deactivate","StakeProgram","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","publicKeyToEthAddress","sha3","Secp256k1Program","ethAddress","recoveryId","createInstructionWithEthAddress","rawAddress","ethAddressOffset","ethAddressInstructionIndex","pkey","publicKeyCreate","messageHash","recid","website","details","keybaseUsername","VOTE_INSTRUCTION_LAYOUTS","InitializeAccount","Voter","initializeAccount","voteInit","authorizedVoter","authorizedWithdrawer","voteAuthorizationType","VoteProgram","BN","isBN","negative","words","red","wordSize","window","parseHex4Bits","parseHexByte","lowerBound","parseBase","mul","min","move","dest","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","ceil","_strip","limbLen","limbPow","mod","imuln","_iaddn","pow","copy","_move","clone","_expand","_normSign","for","inspect","zeros","groupSizes","groupBases","out","groupSize","groupBase","isZero","modrn","idivn","toNumber","ret","smallMulTo","ncarry","rword","maxJ","ArrayType","byteLength","reqLength","allocUnsafe","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","mulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","toBitArray","q","iushln","bits","carryMask","newCarry","ishln","iushrn","hint","extended","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","strip","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","currentLen","mont","u","_Buffer","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","fill","isBuffer","pbegin","pend","b58","it1","it2","repeat","__createBinding","k2","get","__setModuleDefault","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","__importStar","hasOwnProperty","__importDefault","BinaryReader","BinaryWriter","BorshError","baseDecode","baseEncode","bn_js_1","bs58_1","textDecoder","TextDecoder","fatal","INITIAL_LENGTH","fieldPath","originalMessage","fieldName","splice","maybeResize","writeUInt8","writeUInt16LE","writeUInt32LE","writeBuffer","subarray","writeU32","fn","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","RangeError","indexOf","readUInt8","readUInt16LE","readUInt32LE","readBuffer","readU32","capitalizeFirstLetter","toUpperCase","serializeField","fieldType","writer","writeFixedArray","writeArray","writeU8","serializeStruct","addToFieldPath","borshSerialize","structSchema","field","idx","deserializeField","reader","readFixedArray","readArray","readU8","set","deserializeStruct","classType","borshDeserialize","fieldValue","Writer","Reader","inRange","ToDictionary","Stream","tokens","endOfStream","read","prepend","token","pop","finished","decoderError","opt_code_point","DEFAULT_ENCODING","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","temp","ArrayBuffer","byteOffset","input_stream","code_points","cp","codePointsToString","opt_string","stringToCodePoints","reversed","reverse","toBigIntBE","padStart","toBufferBE","_interopRequireDefault","Client","_createClass2","_classCallCheck2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_websocket","_createSuper","Derived","hasNativeReflectConstruct","construct","sham","Proxy","valueOf","_isNativeReflectConstruct","Super","NewTarget","_CommonClient","_super","_ref","_ref$autoconnect","_ref$reconnect","reconnect","_ref$reconnect_interv","reconnect_interval","_ref$max_reconnects","generate_request_id","_setPrototypeOf","ReferenceError","WebSocketBrowserImpl","_EventEmitter","protocols","_this","socket","WebSocket","onopen","emit","onmessage","event","onerror","onclose","optionsOrCallback","send","close","listener","addEventListener","EventEmitter","_regenerator","_asyncToGenerator2","_typeof2","_eventemitter","__rest","getOwnPropertySymbols","propertyIsEnumerable","CommonClient","webSocketFactory","_a","_a$autoconnect","_a$reconnect","_a$reconnect_interval","_a$max_reconnects","rest_options","queue","rpc_id","ready","current_reconnects","_connect","timeout","ws_opts","_this2","promise","_login","mark","_callee","resp","wrap","_context","sent","abrupt","stop","_x","_listMethods","_callee2","_context2","_this3","_subscribe","_callee3","_context3","_x2","_unsubscribe","_callee4","_context4","_x3","_this4","parse","listeners","then","_ref2","runtime","regeneratorRuntime","accidentalStrictMode","Function","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","_invoke","doneResult","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","awrap","async","iter","object","skipTempReset","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","uuid","v4","generateRequest","ClientBrowser","callServer","reviver","replacer","notificationIdNull","request","isBatch","hasCallback","_parseResponse","responseText","isError","cond","isUint8Array","numbers","isCompressed","toTypeString","getAssertedOutput","secp256k1","contextRandomize","privateKeyVerify","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyVerify","compressed","publicKeyConvert","publicKeyNegate","publicKeyCombine","pubkeys","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","sig","signatureExport","outputlen","signatureImport","msg32","noncefn","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","loadPublicKey","first","keyPair","pub","loadCompressedPublicKey","x3","loadUncompressedPublicKey","savePublicKey","point","bn","negate","tweaked","keyFromPrivate","getPublic","pairs","isInfinity","nh","sigR","sigS","lenR","posR","lenS","posS","_noncefn","counter","canonical","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","getX","getY","req","chainId","mergeMiddleware","createChainIdMiddleware","createProviderConfigMiddleware","rpcTarget","createFetchMiddleware","networkMiddleware","createConfigMiddleware","getAccounts","createAsyncMiddleware","requestAccounts","getSecretKey","createRequestAccountsMiddleware","createGetAccountsMiddleware","createGenericJRPCMiddleware","chainConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","switchChain","setupProvider","engine","providerHandlers","solanaMiddleware","createSolanaMiddleware","configMiddleware","injectedProviderProxy","provider","providerFromEngine","lookupNetwork","getInjectedProviderProxy","getBaseProviderHandlers","injectedProvider","getPrivateKey","ethErrors","signTransaction","signMessage","signAllTransactions","signAndSendTransaction","txRes","getProviderHandlers","createInjectedProviderProxyMiddleware","txMessage","getProviderEngineProxy","conn","allTxns","unsignedTx","getSlopeHandlers","solflareProviderHandlers","getSolflareHandlers","getSolletHandlers","getTorusHandlers","connectedChainId","connectedHexChainId","isHexStrict","WalletInitializationError","setupEngine","handleInjectedProviderUpdate","_objectSpread","keyPairGenerator","signedMsg","_providerEngineProxy","txns","enable","privKey","createJsonRpcClient","updateAccount","health","getChainSwitchMiddleware","chainSwitchHandlers","addNewChainConfig","nativeCurrency","rpcUrls","ticker","tickerName","blockExplorer","switchSolanaChain","createChainSwitchMiddleware","getAccountMiddleware","accountHandlers","updatePrivatekey","createAccountMiddleware","SolanaPrivateKeyProvider","providerFactory","SolanaWallet","signedTransaction","signedTransactions"],"mappings":"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","file":"static/js/11.12fdf157.chunk.js","sourcesContent":["var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Support for translating between Uint8Array instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s16 = exports.s8 = exports.nu64be = exports.u48be = exports.u40be = exports.u32be = exports.u24be = exports.u16be = exports.nu64 = exports.u48 = exports.u40 = exports.u32 = exports.u24 = exports.u16 = exports.u8 = exports.offset = exports.greedy = exports.Constant = exports.UTF8 = exports.CString = exports.Blob = exports.Boolean = exports.BitField = exports.BitStructure = exports.VariantLayout = exports.Union = exports.UnionLayoutDiscriminator = exports.UnionDiscriminator = exports.Structure = exports.Sequence = exports.DoubleBE = exports.Double = exports.FloatBE = exports.Float = exports.NearInt64BE = exports.NearInt64 = exports.NearUInt64BE = exports.NearUInt64 = exports.IntBE = exports.Int = exports.UIntBE = exports.UInt = exports.OffsetLayout = exports.GreedyCount = exports.ExternalLayout = exports.bindConstructorLayout = exports.nameWithProperty = exports.Layout = exports.uint8ArrayToBuffer = exports.checkUint8Array = void 0;\nexports.constant = exports.utf8 = exports.cstr = exports.blob = exports.unionLayoutDiscriminator = exports.union = exports.seq = exports.bits = exports.struct = exports.f64be = exports.f64 = exports.f32be = exports.f32 = exports.ns64be = exports.s48be = exports.s40be = exports.s32be = exports.s24be = exports.s16be = exports.ns64 = exports.s48 = exports.s40 = exports.s32 = exports.s24 = void 0;\nconst buffer_1 = require(\"buffer\");\n/* Check if a value is a Uint8Array.\n *\n * @ignore */\nfunction checkUint8Array(b) {\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError('b must be a Uint8Array');\n    }\n}\nexports.checkUint8Array = checkUint8Array;\n/* Create a Buffer instance from a Uint8Array.\n *\n * @ignore */\nfunction uint8ArrayToBuffer(b) {\n    checkUint8Array(b);\n    return buffer_1.Buffer.from(b.buffer, b.byteOffset, b.length);\n}\nexports.uint8ArrayToBuffer = uint8ArrayToBuffer;\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n    constructor(span, property) {\n        if (!Number.isInteger(span)) {\n            throw new TypeError('span must be an integer');\n        }\n        /** The span of the layout in bytes.\n         *\n         * Positive values are generally expected.\n         *\n         * Zero will only appear in {@link Constant}s and in {@link\n         * Sequence}s where the {@link Sequence#count|count} is zero.\n         *\n         * A negative value indicates that the span is value-specific, and\n         * must be obtained using {@link Layout#getSpan|getSpan}. */\n        this.span = span;\n        /** The property name used when this layout is represented in an\n         * Object.\n         *\n         * Used only for layouts that {@link Layout#decode|decode} to Object\n         * instances.  If left undefined the span of the unnamed layout will\n         * be treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Function to create an Object into which decoded properties will\n     * be written.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances, which means:\n     * * {@link Structure}\n     * * {@link Union}\n     * * {@link VariantLayout}\n     * * {@link BitStructure}\n     *\n     * If left undefined the JavaScript representation of these layouts\n     * will be Object instances.\n     *\n     * See {@link bindConstructorLayout}.\n     */\n    makeDestinationObject() {\n        return {};\n    }\n    /**\n     * Calculate the span of a specific instance of a layout.\n     *\n     * @param {Uint8Array} b - the buffer that contains an encoded instance.\n     *\n     * @param {Number} [offset] - the offset at which the encoded instance\n     * starts.  If absent a zero offset is inferred.\n     *\n     * @return {Number} - the number of bytes covered by the layout\n     * instance.  If this method is not overridden in a subclass the\n     * definition-time constant {@link Layout#span|span} will be\n     * returned.\n     *\n     * @throws {RangeError} - if the length of the value cannot be\n     * determined.\n     */\n    getSpan(b, offset) {\n        if (0 > this.span) {\n            throw new RangeError('indeterminate span');\n        }\n        return this.span;\n    }\n    /**\n     * Replicate the layout using a new property.\n     *\n     * This function must be used to get a structurally-equivalent layout\n     * with a different name since all {@link Layout} instances are\n     * immutable.\n     *\n     * **NOTE** This is a shallow copy.  All fields except {@link\n     * Layout#property|property} are strictly equal to the origin layout.\n     *\n     * @param {String} property - the value for {@link\n     * Layout#property|property} in the replica.\n     *\n     * @returns {Layout} - the copy with {@link Layout#property|property}\n     * set to `property`.\n     */\n    replicate(property) {\n        const rv = Object.create(this.constructor.prototype);\n        Object.assign(rv, this);\n        rv.property = property;\n        return rv;\n    }\n    /**\n     * Create an object from layout properties and an array of values.\n     *\n     * **NOTE** This function returns `undefined` if invoked on a layout\n     * that does not return its value as an Object.  Objects are\n     * returned for things that are a {@link Structure}, which includes\n     * {@link VariantLayout|variant layouts} if they are structures, and\n     * excludes {@link Union}s.  If you want this feature for a union\n     * you must use {@link Union.getVariant|getVariant} to select the\n     * desired layout.\n     *\n     * @param {Array} values - an array of values that correspond to the\n     * default order for properties.  As with {@link Layout#decode|decode}\n     * layout elements that have no property name are skipped when\n     * iterating over the array values.  Only the top-level properties are\n     * assigned; arguments are not assigned to properties of contained\n     * layouts.  Any unused values are ignored.\n     *\n     * @return {(Object|undefined)}\n     */\n    fromArray(values) {\n        return undefined;\n    }\n}\nexports.Layout = Layout;\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n    if (lo.property) {\n        return name + '[' + lo.property + ']';\n    }\n    return name;\n}\nexports.nameWithProperty = nameWithProperty;\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\n// `Class` must be a constructor Function, but the assignment of a `layout_` property to it makes it difficult to type\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction bindConstructorLayout(Class, layout) {\n    if ('function' !== typeof Class) {\n        throw new TypeError('Class must be constructor');\n    }\n    if (Object.prototype.hasOwnProperty.call(Class, 'layout_')) {\n        throw new Error('Class is already bound to a layout');\n    }\n    if (!(layout && (layout instanceof Layout))) {\n        throw new TypeError('layout must be a Layout');\n    }\n    if (Object.prototype.hasOwnProperty.call(layout, 'boundConstructor_')) {\n        throw new Error('layout is already bound to a constructor');\n    }\n    Class.layout_ = layout;\n    layout.boundConstructor_ = Class;\n    layout.makeDestinationObject = (() => new Class());\n    Object.defineProperty(Class.prototype, 'encode', {\n        value(b, offset) {\n            return layout.encode(this, b, offset);\n        },\n        writable: true,\n    });\n    Object.defineProperty(Class, 'decode', {\n        value(b, offset) {\n            return layout.decode(b, offset);\n        },\n        writable: true,\n    });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n    /**\n     * Return `true` iff the external layout decodes to an unsigned\n     * integer layout.\n     *\n     * In that case it can be used as the source of {@link\n     * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n     * or as {@link UnionLayoutDiscriminator#layout|external union\n     * discriminators}.\n     *\n     * @abstract\n     */\n    isCount() {\n        throw new Error('ExternalLayout is abstract');\n    }\n}\nexports.ExternalLayout = ExternalLayout;\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n    constructor(elementSpan = 1, property) {\n        if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n            throw new TypeError('elementSpan must be a (positive) integer');\n        }\n        super(-1, property);\n        /** The layout for individual elements of the sequence.  The value\n         * must be a positive integer.  If not provided, the value will be\n         * 1. */\n        this.elementSpan = elementSpan;\n    }\n    /** @override */\n    isCount() {\n        return true;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const rem = b.length - offset;\n        return Math.floor(rem / this.elementSpan);\n    }\n    /** @override */\n    encode(src, b, offset) {\n        return 0;\n    }\n}\nexports.GreedyCount = GreedyCount;\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n    constructor(layout, offset = 0, property) {\n        if (!(layout instanceof Layout)) {\n            throw new TypeError('layout must be a Layout');\n        }\n        if (!Number.isInteger(offset)) {\n            throw new TypeError('offset must be integer or undefined');\n        }\n        super(layout.span, property || layout.property);\n        /** The subordinated layout. */\n        this.layout = layout;\n        /** The location of {@link OffsetLayout#layout} relative to the\n         * start of another layout.\n         *\n         * The value may be positive or negative, but an error will thrown\n         * if at the point of use it goes outside the span of the Uint8Array\n         * being accessed.  */\n        this.offset = offset;\n    }\n    /** @override */\n    isCount() {\n        return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return this.layout.decode(b, offset + this.offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        return this.layout.encode(src, b, offset + this.offset);\n    }\n}\nexports.OffsetLayout = OffsetLayout;\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UInt = UInt;\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readUIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeUIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.UIntBE = UIntBE;\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntLE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntLE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.Int = Int;\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n    constructor(span, property) {\n        super(span, property);\n        if (6 < this.span) {\n            throw new RangeError('span must not exceed 6 bytes');\n        }\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readIntBE(offset, this.span);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeIntBE(src, offset, this.span);\n        return this.span;\n    }\n}\nexports.IntBE = IntBE;\nconst V2E32 = Math.pow(2, 32);\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n    const hi32 = Math.floor(src / V2E32);\n    const lo32 = src - (hi32 * V2E32);\n    return { hi32, lo32 };\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n    return hi32 * V2E32 + lo32;\n}\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readUInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeUInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64 = NearUInt64;\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readUInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearUInt64BE = NearUInt64BE;\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const lo32 = buffer.readUInt32LE(offset);\n        const hi32 = buffer.readInt32LE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeUInt32LE(split.lo32, offset);\n        buffer.writeInt32LE(split.hi32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64 = NearInt64;\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const buffer = uint8ArrayToBuffer(b);\n        const hi32 = buffer.readInt32BE(offset);\n        const lo32 = buffer.readUInt32BE(offset + 4);\n        return roundedInt64(hi32, lo32);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        const split = divmodInt64(src);\n        const buffer = uint8ArrayToBuffer(b);\n        buffer.writeInt32BE(split.hi32, offset);\n        buffer.writeUInt32BE(split.lo32, offset + 4);\n        return 8;\n    }\n}\nexports.NearInt64BE = NearInt64BE;\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatLE(src, offset);\n        return 4;\n    }\n}\nexports.Float = Float;\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n    constructor(property) {\n        super(4, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readFloatBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeFloatBE(src, offset);\n        return 4;\n    }\n}\nexports.FloatBE = FloatBE;\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleLE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleLE(src, offset);\n        return 8;\n    }\n}\nexports.Double = Double;\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n    constructor(property) {\n        super(8, property);\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        return uint8ArrayToBuffer(b).readDoubleBE(offset);\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        uint8ArrayToBuffer(b).writeDoubleBE(src, offset);\n        return 8;\n    }\n}\nexports.DoubleBE = DoubleBE;\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n    constructor(elementLayout, count, property) {\n        if (!(elementLayout instanceof Layout)) {\n            throw new TypeError('elementLayout must be a Layout');\n        }\n        if (!(((count instanceof ExternalLayout) && count.isCount())\n            || (Number.isInteger(count) && (0 <= count)))) {\n            throw new TypeError('count must be non-negative integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if ((!(count instanceof ExternalLayout))\n            && (0 < elementLayout.span)) {\n            span = count * elementLayout.span;\n        }\n        super(span, property);\n        /** The layout for individual elements of the sequence. */\n        this.elementLayout = elementLayout;\n        /** The number of elements in the sequence.\n         *\n         * This will be either a non-negative integer or an instance of\n         * {@link ExternalLayout} for which {@link\n         * ExternalLayout#isCount|isCount()} is `true`. */\n        this.count = count;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        if (0 < this.elementLayout.span) {\n            span = count * this.elementLayout.span;\n        }\n        else {\n            let idx = 0;\n            while (idx < count) {\n                span += this.elementLayout.getSpan(b, offset + span);\n                ++idx;\n            }\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const rv = [];\n        let i = 0;\n        let count = this.count;\n        if (count instanceof ExternalLayout) {\n            count = count.decode(b, offset);\n        }\n        while (i < count) {\n            rv.push(this.elementLayout.decode(b, offset));\n            offset += this.elementLayout.getSpan(b, offset);\n            i += 1;\n        }\n        return rv;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n     *\n     * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n     * the unused space in the buffer is left unchanged.  If `src` is\n     * longer than {@link Sequence#count|count} the unneeded elements are\n     * ignored.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset = 0) {\n        const elo = this.elementLayout;\n        const span = src.reduce((span, v) => {\n            return span + elo.encode(v, b, offset + span);\n        }, 0);\n        if (this.count instanceof ExternalLayout) {\n            this.count.encode(src.length, b, offset);\n        }\n        return span;\n    }\n}\nexports.Sequence = Sequence;\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n    constructor(fields, property, decodePrefixes) {\n        if (!(Array.isArray(fields)\n            && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n            throw new TypeError('fields must be array of Layout instances');\n        }\n        if (('boolean' === typeof property)\n            && (undefined === decodePrefixes)) {\n            decodePrefixes = property;\n            property = undefined;\n        }\n        /* Verify absence of unnamed variable-length fields. */\n        for (const fd of fields) {\n            if ((0 > fd.span)\n                && (undefined === fd.property)) {\n                throw new Error('fields cannot contain unnamed variable-length layout');\n            }\n        }\n        let span = -1;\n        try {\n            span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n        }\n        catch (e) {\n            // ignore error\n        }\n        super(span, property);\n        /** The sequence of {@link Layout} values that comprise the\n         * structure.\n         *\n         * The individual elements need not be the same type, and may be\n         * either scalar or aggregate layouts.  If a member layout leaves\n         * its {@link Layout#property|property} undefined the\n         * corresponding region of the buffer associated with the element\n         * will not be mutated.\n         *\n         * @type {Layout[]} */\n        this.fields = fields;\n        /** Control behavior of {@link Layout#decode|decode()} given short\n         * buffers.\n         *\n         * In some situations a structure many be extended with additional\n         * fields over time, with older installations providing only a\n         * prefix of the full structure.  If this property is `true`\n         * decoding will accept those buffers and leave subsequent fields\n         * undefined, as long as the buffer ends at a field boundary.\n         * Defaults to `false`. */\n        this.decodePrefixes = !!decodePrefixes;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        let span = 0;\n        try {\n            span = this.fields.reduce((span, fd) => {\n                const fsp = fd.getSpan(b, offset);\n                offset += fsp;\n                return span + fsp;\n            }, 0);\n        }\n        catch (e) {\n            throw new RangeError('indeterminate span');\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        checkUint8Array(b);\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b, offset);\n            }\n            offset += fd.getSpan(b, offset);\n            if (this.decodePrefixes\n                && (b.length === offset)) {\n                break;\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Structure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the buffer is\n     * left unmodified. */\n    encode(src, b, offset = 0) {\n        const firstOffset = offset;\n        let lastOffset = 0;\n        let lastWrote = 0;\n        for (const fd of this.fields) {\n            let span = fd.span;\n            lastWrote = (0 < span) ? span : 0;\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    lastWrote = fd.encode(fv, b, offset);\n                    if (0 > span) {\n                        /* Read the as-encoded span, which is not necessarily the\n                         * same as what we wrote. */\n                        span = fd.getSpan(b, offset);\n                    }\n                }\n            }\n            lastOffset = offset;\n            offset += span;\n        }\n        /* Use (lastOffset + lastWrote) instead of offset because the last\n         * item may have had a dynamic length and we don't want to include\n         * the padding between it and the end of the space reserved for\n         * it. */\n        return (lastOffset + lastWrote) - firstOffset;\n    }\n    /** @override */\n    fromArray(values) {\n        const dest = this.makeDestinationObject();\n        for (const fd of this.fields) {\n            if ((undefined !== fd.property)\n                && (0 < values.length)) {\n                dest[fd.property] = values.shift();\n            }\n        }\n        return dest;\n    }\n    /**\n     * Get access to the layout of a given property.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Layout} - the layout associated with `property`, or\n     * undefined if there is no such property.\n     */\n    layoutFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Get the offset of a structure member.\n     *\n     * @param {String} property - the structure member of interest.\n     *\n     * @return {Number} - the offset in bytes to the start of `property`\n     * within the structure, or undefined if `property` is not a field\n     * within the structure.  If the property is a member but follows a\n     * variable-length structure member a negative number will be\n     * returned.\n     */\n    offsetOf(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        let offset = 0;\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return offset;\n            }\n            if (0 > fd.span) {\n                offset = -1;\n            }\n            else if (0 <= offset) {\n                offset += fd.span;\n            }\n        }\n        return undefined;\n    }\n}\nexports.Structure = Structure;\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n    constructor(property) {\n        /** The {@link Layout#property|property} to be used when the\n         * discriminator is referenced in isolation (generally when {@link\n         * Union#decode|Union decode} cannot delegate to a specific\n         * variant). */\n        this.property = property;\n    }\n    /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n     *\n     * The implementation of this method need not reference the buffer if\n     * variant information is available through other means. */\n    decode(b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n    /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n     *\n     * The implementation of this method need not store the value if\n     * variant information is maintained through other means. */\n    encode(src, b, offset) {\n        throw new Error('UnionDiscriminator is abstract');\n    }\n}\nexports.UnionDiscriminator = UnionDiscriminator;\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n    constructor(layout, property) {\n        if (!((layout instanceof ExternalLayout)\n            && layout.isCount())) {\n            throw new TypeError('layout must be an unsigned integer ExternalLayout');\n        }\n        super(property || layout.property || 'variant');\n        /** The {@link ExternalLayout} used to access the discriminator\n         * value. */\n        this.layout = layout;\n    }\n    /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    decode(b, offset) {\n        return this.layout.decode(b, offset);\n    }\n    /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n    encode(src, b, offset) {\n        return this.layout.encode(src, b, offset);\n    }\n}\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n    constructor(discr, defaultLayout, property) {\n        let discriminator;\n        if ((discr instanceof UInt)\n            || (discr instanceof UIntBE)) {\n            discriminator = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n        }\n        else if ((discr instanceof ExternalLayout)\n            && discr.isCount()) {\n            discriminator = new UnionLayoutDiscriminator(discr);\n        }\n        else if (!(discr instanceof UnionDiscriminator)) {\n            throw new TypeError('discr must be a UnionDiscriminator '\n                + 'or an unsigned integer layout');\n        }\n        else {\n            discriminator = discr;\n        }\n        if (undefined === defaultLayout) {\n            defaultLayout = null;\n        }\n        if (!((null === defaultLayout)\n            || (defaultLayout instanceof Layout))) {\n            throw new TypeError('defaultLayout must be null or a Layout');\n        }\n        if (null !== defaultLayout) {\n            if (0 > defaultLayout.span) {\n                throw new Error('defaultLayout must have constant span');\n            }\n            if (undefined === defaultLayout.property) {\n                defaultLayout = defaultLayout.replicate('content');\n            }\n        }\n        /* The union span can be estimated only if there's a default\n         * layout.  The union spans its default layout, plus any prefix\n         * variant layout.  By construction both layouts, if present, have\n         * non-negative span. */\n        let span = -1;\n        if (defaultLayout) {\n            span = defaultLayout.span;\n            if ((0 <= span) && ((discr instanceof UInt)\n                || (discr instanceof UIntBE))) {\n                span += discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The interface for the discriminator value in isolation.\n         *\n         * This a {@link UnionDiscriminator} either passed to the\n         * constructor or synthesized from the `discr` constructor\n         * argument.  {@link\n         * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n         * `true` iff the `discr` parameter was a non-offset {@link\n         * Layout} instance. */\n        this.discriminator = discriminator;\n        /** `true` if the {@link Union#discriminator|discriminator} is the\n         * first field in the union.\n         *\n         * If `false` the discriminator is obtained from somewhere\n         * else. */\n        this.usesPrefixDiscriminator = (discr instanceof UInt)\n            || (discr instanceof UIntBE);\n        /** The layout for non-discriminator content when the value of the\n         * discriminator is not recognized.\n         *\n         * This is the value passed to the constructor.  It is\n         * structurally equivalent to the second component of {@link\n         * Union#layout|layout} but may have a different property\n         * name. */\n        this.defaultLayout = defaultLayout;\n        /** A registry of allowed variants.\n         *\n         * The keys are unsigned integers which should be compatible with\n         * {@link Union.discriminator|discriminator}.  The property value\n         * is the corresponding {@link VariantLayout} instances assigned\n         * to this union by {@link Union#addVariant|addVariant}.\n         *\n         * **NOTE** The registry remains mutable so that variants can be\n         * {@link Union#addVariant|added} at any time.  Users should not\n         * manipulate the content of this property. */\n        this.registry = {};\n        /* Private variable used when invoking getSourceVariant */\n        let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n        /** Function to infer the variant selected by a source object.\n         *\n         * Defaults to {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n         * be overridden using {@link\n         * Union#configGetSourceVariant|configGetSourceVariant}.\n         *\n         * @param {Object} src - as with {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * @returns {(undefined|VariantLayout)} The default variant\n         * (`undefined`) or first registered variant that uses a property\n         * available in `src`. */\n        this.getSourceVariant = function (src) {\n            return boundGetSourceVariant(src);\n        };\n        /** Function to override the implementation of {@link\n         * Union#getSourceVariant|getSourceVariant}.\n         *\n         * Use this if the desired variant cannot be identified using the\n         * algorithm of {@link\n         * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n         *\n         * **NOTE** The provided function will be invoked bound to this\n         * Union instance, providing local access to {@link\n         * Union#registry|registry}.\n         *\n         * @param {Function} gsv - a function that follows the API of\n         * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n        this.configGetSourceVariant = function (gsv) {\n            boundGetSourceVariant = gsv.bind(this);\n        };\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            return this.span;\n        }\n        /* Default layouts always have non-negative span, so we don't have\n         * one and we have to recognize the variant which will in turn\n         * determine the span. */\n        const vlo = this.getVariant(b, offset);\n        if (!vlo) {\n            throw new Error('unable to determine span for unrecognized variant');\n        }\n        return vlo.getSpan(b, offset);\n    }\n    /**\n     * Method to infer a registered Union variant compatible with `src`.\n     *\n     * The first satisfied rule in the following sequence defines the\n     * return value:\n     * * If `src` has properties matching the Union discriminator and\n     *   the default layout, `undefined` is returned regardless of the\n     *   value of the discriminator property (this ensures the default\n     *   layout will be used);\n     * * If `src` has a property matching the Union discriminator, the\n     *   value of the discriminator identifies a registered variant, and\n     *   either (a) the variant has no layout, or (b) `src` has the\n     *   variant's property, then the variant is returned (because the\n     *   source satisfies the constraints of the variant it identifies);\n     * * If `src` does not have a property matching the Union\n     *   discriminator, but does have a property matching a registered\n     *   variant, then the variant is returned (because the source\n     *   matches a variant without an explicit conflict);\n     * * An error is thrown (because we either can't identify a variant,\n     *   or we were explicitly told the variant but can't satisfy it).\n     *\n     * @param {Object} src - an object presumed to be compatible with\n     * the content of the Union.\n     *\n     * @return {(undefined|VariantLayout)} - as described above.\n     *\n     * @throws {Error} - if `src` cannot be associated with a default or\n     * registered variant.\n     */\n    defaultGetSourceVariant(src) {\n        if (Object.prototype.hasOwnProperty.call(src, this.discriminator.property)) {\n            if (this.defaultLayout && this.defaultLayout.property\n                && Object.prototype.hasOwnProperty.call(src, this.defaultLayout.property)) {\n                return undefined;\n            }\n            const vlo = this.registry[src[this.discriminator.property]];\n            if (vlo\n                && ((!vlo.layout)\n                    || (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)))) {\n                return vlo;\n            }\n        }\n        else {\n            for (const tag in this.registry) {\n                const vlo = this.registry[tag];\n                if (vlo.property && Object.prototype.hasOwnProperty.call(src, vlo.property)) {\n                    return vlo;\n                }\n            }\n        }\n        throw new Error('unable to infer src variant');\n    }\n    /** Implement {@link Layout#decode|decode} for {@link Union}.\n     *\n     * If the variant is {@link Union#addVariant|registered} the return\n     * value is an instance of that variant, with no explicit\n     * discriminator.  Otherwise the {@link Union#defaultLayout|default\n     * layout} is used to decode the content. */\n    decode(b, offset = 0) {\n        let dest;\n        const dlo = this.discriminator;\n        const discr = dlo.decode(b, offset);\n        const clo = this.registry[discr];\n        if (undefined === clo) {\n            const defaultLayout = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dest = this.makeDestinationObject();\n            dest[dlo.property] = discr;\n            // defaultLayout.property can be undefined, but this is allowed by buffer-layout\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            dest[defaultLayout.property] = defaultLayout.decode(b, offset + contentOffset);\n        }\n        else {\n            dest = clo.decode(b, offset);\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Union}.\n     *\n     * This API assumes the `src` object is consistent with the union's\n     * {@link Union#defaultLayout|default layout}.  To encode variants\n     * use the appropriate variant-specific {@link VariantLayout#encode}\n     * method. */\n    encode(src, b, offset = 0) {\n        const vlo = this.getSourceVariant(src);\n        if (undefined === vlo) {\n            const dlo = this.discriminator;\n            // this.defaultLayout is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const clo = this.defaultLayout;\n            let contentOffset = 0;\n            if (this.usesPrefixDiscriminator) {\n                contentOffset = dlo.layout.span;\n            }\n            dlo.encode(src[dlo.property], b, offset);\n            // clo.property is not undefined when vlo is undefined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return contentOffset + clo.encode(src[clo.property], b, offset + contentOffset);\n        }\n        return vlo.encode(src, b, offset);\n    }\n    /** Register a new variant structure within a union.  The newly\n     * created variant is returned.\n     *\n     * @param {Number} variant - initializer for {@link\n     * VariantLayout#variant|variant}.\n     *\n     * @param {Layout} layout - initializer for {@link\n     * VariantLayout#layout|layout}.\n     *\n     * @param {String} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {VariantLayout} */\n    addVariant(variant, layout, property) {\n        const rv = new VariantLayout(this, variant, layout, property);\n        this.registry[variant] = rv;\n        return rv;\n    }\n    /**\n     * Get the layout associated with a registered variant.\n     *\n     * If `vb` does not produce a registered variant the function returns\n     * `undefined`.\n     *\n     * @param {(Number|Uint8Array)} vb - either the variant number, or a\n     * buffer from which the discriminator is to be read.\n     *\n     * @param {Number} offset - offset into `vb` for the start of the\n     * union.  Used only when `vb` is an instance of {Uint8Array}.\n     *\n     * @return {({VariantLayout}|undefined)}\n     */\n    getVariant(vb, offset = 0) {\n        let variant;\n        if (vb instanceof Uint8Array) {\n            variant = this.discriminator.decode(vb, offset);\n        }\n        else {\n            variant = vb;\n        }\n        return this.registry[variant];\n    }\n}\nexports.Union = Union;\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n    constructor(union, variant, layout, property) {\n        if (!(union instanceof Union)) {\n            throw new TypeError('union must be a Union');\n        }\n        if ((!Number.isInteger(variant)) || (0 > variant)) {\n            throw new TypeError('variant must be a (non-negative) integer');\n        }\n        if (('string' === typeof layout)\n            && (undefined === property)) {\n            property = layout;\n            layout = null;\n        }\n        if (layout) {\n            if (!(layout instanceof Layout)) {\n                throw new TypeError('layout must be a Layout');\n            }\n            if ((null !== union.defaultLayout)\n                && (0 <= layout.span)\n                && (layout.span > union.defaultLayout.span)) {\n                throw new Error('variant span exceeds span of containing union');\n            }\n            if ('string' !== typeof property) {\n                throw new TypeError('variant must have a String property');\n            }\n        }\n        let span = union.span;\n        if (0 > union.span) {\n            span = layout ? layout.span : 0;\n            if ((0 <= span) && union.usesPrefixDiscriminator) {\n                span += union.discriminator.layout.span;\n            }\n        }\n        super(span, property);\n        /** The {@link Union} to which this variant belongs. */\n        this.union = union;\n        /** The unsigned integral value identifying this variant within\n         * the {@link Union#discriminator|discriminator} of the containing\n         * union. */\n        this.variant = variant;\n        /** The {@link Layout} to be used when reading/writing the\n         * non-discriminator part of the {@link\n         * VariantLayout#union|union}.  If `null` the variant carries no\n         * data. */\n        this.layout = layout || null;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        if (0 <= this.span) {\n            /* Will be equal to the containing union span if that is not\n             * variable. */\n            return this.span;\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        /* Span is defined solely by the variant (and prefix discriminator) */\n        let span = 0;\n        if (this.layout) {\n            span = this.layout.getSpan(b, offset + contentOffset);\n        }\n        return contentOffset + span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        if (this !== this.union.getVariant(b, offset)) {\n            throw new Error('variant mismatch');\n        }\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout) {\n            dest[this.property] = this.layout.decode(b, offset + contentOffset);\n        }\n        else if (this.property) {\n            dest[this.property] = true;\n        }\n        else if (this.union.usesPrefixDiscriminator) {\n            dest[this.union.discriminator.property] = this.variant;\n        }\n        return dest;\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        let contentOffset = 0;\n        if (this.union.usesPrefixDiscriminator) {\n            contentOffset = this.union.discriminator.layout.span;\n        }\n        if (this.layout\n            && (!Object.prototype.hasOwnProperty.call(src, this.property))) {\n            throw new TypeError('variant lacks property ' + this.property);\n        }\n        this.union.discriminator.encode(this.variant, b, offset);\n        let span = contentOffset;\n        if (this.layout) {\n            this.layout.encode(src[this.property], b, offset + contentOffset);\n            span += this.layout.getSpan(b, offset + contentOffset);\n            if ((0 <= this.union.span)\n                && (span > this.union.span)) {\n                throw new Error('encoded variant overruns containing union');\n            }\n        }\n        return span;\n    }\n    /** Delegate {@link Layout#fromArray|fromArray} to {@link\n     * VariantLayout#layout|layout}. */\n    fromArray(values) {\n        if (this.layout) {\n            return this.layout.fromArray(values);\n        }\n        return undefined;\n    }\n}\nexports.VariantLayout = VariantLayout;\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n    if (0 > v) {\n        v += 0x100000000;\n    }\n    return v;\n}\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n    constructor(word, msb, property) {\n        if (!((word instanceof UInt)\n            || (word instanceof UIntBE))) {\n            throw new TypeError('word must be a UInt or UIntBE layout');\n        }\n        if (('string' === typeof msb)\n            && (undefined === property)) {\n            property = msb;\n            msb = false;\n        }\n        if (4 < word.span) {\n            throw new RangeError('word cannot exceed 32 bits');\n        }\n        super(word.span, property);\n        /** The layout used for the packed value.  {@link BitField}\n         * instances are packed sequentially depending on {@link\n         * BitStructure#msb|msb}. */\n        this.word = word;\n        /** Whether the bit sequences are packed starting at the most\n         * significant bit growing down (`true`), or the least significant\n         * bit growing up (`false`).\n         *\n         * **NOTE** Regardless of this value, the least significant bit of\n         * any {@link BitField} value is the least significant bit of the\n         * corresponding section of the packed value. */\n        this.msb = !!msb;\n        /** The sequence of {@link BitField} layouts that comprise the\n         * packed structure.\n         *\n         * **NOTE** The array remains mutable to allow fields to be {@link\n         * BitStructure#addField|added} after construction.  Users should\n         * not manipulate the content of this property.*/\n        this.fields = [];\n        /* Storage for the value.  Capture a variable instead of using an\n         * instance property because we don't want anything to change the\n         * value without going through the mutator. */\n        let value = 0;\n        this._packedSetValue = function (v) {\n            value = fixBitwiseResult(v);\n            return this;\n        };\n        this._packedGetValue = function () {\n            return value;\n        };\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const dest = this.makeDestinationObject();\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                dest[fd.property] = fd.decode(b);\n            }\n        }\n        return dest;\n    }\n    /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n     *\n     * If `src` is missing a property for a member with a defined {@link\n     * Layout#property|property} the corresponding region of the packed\n     * value is left unmodified.  Unused bits are also left unmodified. */\n    encode(src, b, offset = 0) {\n        const value = this.word.decode(b, offset);\n        this._packedSetValue(value);\n        for (const fd of this.fields) {\n            if (undefined !== fd.property) {\n                const fv = src[fd.property];\n                if (undefined !== fv) {\n                    fd.encode(fv);\n                }\n            }\n        }\n        return this.word.encode(this._packedGetValue(), b, offset);\n    }\n    /** Register a new bitfield with a containing bit structure.  The\n     * resulting bitfield is returned.\n     *\n     * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {BitField} */\n    addField(bits, property) {\n        const bf = new BitField(this, bits, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /** As with {@link BitStructure#addField|addField} for single-bit\n     * fields with `boolean` value representation.\n     *\n     * @param {string} property - initializer for {@link\n     * Layout#property|property}.\n     *\n     * @return {Boolean} */\n    // `Boolean` conflicts with the native primitive type\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    addBoolean(property) {\n        // This is my Boolean, not the Javascript one.\n        const bf = new Boolean(this, property);\n        this.fields.push(bf);\n        return bf;\n    }\n    /**\n     * Get access to the bit field for a given property.\n     *\n     * @param {String} property - the bit field of interest.\n     *\n     * @return {BitField} - the field associated with `property`, or\n     * undefined if there is no such property.\n     */\n    fieldFor(property) {\n        if ('string' !== typeof property) {\n            throw new TypeError('property must be string');\n        }\n        for (const fd of this.fields) {\n            if (fd.property === property) {\n                return fd;\n            }\n        }\n        return undefined;\n    }\n}\nexports.BitStructure = BitStructure;\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n    constructor(container, bits, property) {\n        if (!(container instanceof BitStructure)) {\n            throw new TypeError('container must be a BitStructure');\n        }\n        if ((!Number.isInteger(bits)) || (0 >= bits)) {\n            throw new TypeError('bits must be positive integer');\n        }\n        const totalBits = 8 * container.span;\n        const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n        if ((bits + usedBits) > totalBits) {\n            throw new Error('bits too long for span remainder ('\n                + (totalBits - usedBits) + ' of '\n                + totalBits + ' remain)');\n        }\n        /** The {@link BitStructure} instance to which this bit field\n         * belongs. */\n        this.container = container;\n        /** The span of this value in bits. */\n        this.bits = bits;\n        /** A mask of {@link BitField#bits|bits} bits isolating value bits\n         * that fit within the field.\n         *\n         * That is, it masks a value that has not yet been shifted into\n         * position within its containing packed integer. */\n        this.valueMask = (1 << bits) - 1;\n        if (32 === bits) { // shifted value out of range\n            this.valueMask = 0xFFFFFFFF;\n        }\n        /** The offset of the value within the containing packed unsigned\n         * integer.  The least significant bit of the packed value is at\n         * offset zero, regardless of bit ordering used. */\n        this.start = usedBits;\n        if (this.container.msb) {\n            this.start = totalBits - usedBits - bits;\n        }\n        /** A mask of {@link BitField#bits|bits} isolating the field value\n         * within the containing packed unsigned integer. */\n        this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n        /** The property name used when this bitfield is represented in an\n         * Object.\n         *\n         * Intended to be functionally equivalent to {@link\n         * Layout#property}.\n         *\n         * If left undefined the corresponding span of bits will be\n         * treated as padding: it will not be mutated by {@link\n         * Layout#encode|encode} nor represented as a property in the\n         * decoded Object. */\n        this.property = property;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field. */\n    decode(b, offset) {\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(word & this.wordMask);\n        const value = wordValue >>> this.start;\n        return value;\n    }\n    /** Store a value into the corresponding subsequence of the containing\n     * bit field.\n     *\n     * **NOTE** This is not a specialization of {@link\n     * Layout#encode|Layout.encode} and there is no return value. */\n    encode(value) {\n        if ('number' !== typeof value\n            || !Number.isInteger(value)\n            || (value !== fixBitwiseResult(value & this.valueMask))) {\n            throw new TypeError(nameWithProperty('BitField.encode', this)\n                + ' value must be integer not exceeding ' + this.valueMask);\n        }\n        const word = this.container._packedGetValue();\n        const wordValue = fixBitwiseResult(value << this.start);\n        this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n            | wordValue);\n    }\n}\nexports.BitField = BitField;\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n    constructor(container, property) {\n        super(container, 1, property);\n    }\n    /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n     *\n     * @returns {boolean} */\n    decode(b, offset) {\n        return !!super.decode(b, offset);\n    }\n    /** @override */\n    encode(value) {\n        if ('boolean' === typeof value) {\n            // BitField requires integer values\n            value = +value;\n        }\n        super.encode(value);\n    }\n}\nexports.Boolean = Boolean;\n/* eslint-enable no-extend-native */\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Uint8Array.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n    constructor(length, property) {\n        if (!(((length instanceof ExternalLayout) && length.isCount())\n            || (Number.isInteger(length) && (0 <= length)))) {\n            throw new TypeError('length must be positive integer '\n                + 'or an unsigned integer ExternalLayout');\n        }\n        let span = -1;\n        if (!(length instanceof ExternalLayout)) {\n            span = length;\n        }\n        super(span, property);\n        /** The number of bytes in the blob.\n         *\n         * This may be a non-negative integer, or an instance of {@link\n         * ExternalLayout} that satisfies {@link\n         * ExternalLayout#isCount|isCount()}. */\n        this.length = length;\n    }\n    /** @override */\n    getSpan(b, offset) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return span;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        let span = this.span;\n        if (0 > span) {\n            span = this.length.decode(b, offset);\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span);\n    }\n    /** Implement {@link Layout#encode|encode} for {@link Blob}.\n     *\n     * **NOTE** If {@link Layout#count|count} is an instance of {@link\n     * ExternalLayout} then the length of `src` will be encoded as the\n     * count after `src` is encoded. */\n    encode(src, b, offset) {\n        let span = this.length;\n        if (this.length instanceof ExternalLayout) {\n            span = src.length;\n        }\n        if (!(src instanceof Uint8Array && span === src.length)) {\n            throw new TypeError(nameWithProperty('Blob.encode', this)\n                + ' requires (length ' + span + ') Uint8Array as src');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Uint8Array');\n        }\n        const srcBuffer = uint8ArrayToBuffer(src);\n        uint8ArrayToBuffer(b).write(srcBuffer.toString('hex'), offset, span, 'hex');\n        if (this.length instanceof ExternalLayout) {\n            this.length.encode(span, b, offset);\n        }\n        return span;\n    }\n}\nexports.Blob = Blob;\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n    constructor(property) {\n        super(-1, property);\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        let idx = offset;\n        while ((idx < b.length) && (0 !== b[idx])) {\n            idx += 1;\n        }\n        return 1 + idx - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        return uint8ArrayToBuffer(b).slice(offset, offset + span - 1).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        const buffer = uint8ArrayToBuffer(b);\n        srcb.copy(buffer, offset);\n        buffer[offset + span] = 0;\n        return span + 1;\n    }\n}\nexports.CString = CString;\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n    constructor(maxSpan, property) {\n        if (('string' === typeof maxSpan) && (undefined === property)) {\n            property = maxSpan;\n            maxSpan = undefined;\n        }\n        if (undefined === maxSpan) {\n            maxSpan = -1;\n        }\n        else if (!Number.isInteger(maxSpan)) {\n            throw new TypeError('maxSpan must be an integer');\n        }\n        super(-1, property);\n        /** The maximum span of the layout in bytes.\n         *\n         * Positive values are generally expected.  Zero is abnormal.\n         * Attempts to encode or decode a value that exceeds this length\n         * will throw a `RangeError`.\n         *\n         * A negative value indicates that there is no bound on the length\n         * of the content. */\n        this.maxSpan = maxSpan;\n    }\n    /** @override */\n    getSpan(b, offset = 0) {\n        checkUint8Array(b);\n        return b.length - offset;\n    }\n    /** @override */\n    decode(b, offset = 0) {\n        const span = this.getSpan(b, offset);\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        return uint8ArrayToBuffer(b).slice(offset, offset + span).toString('utf-8');\n    }\n    /** @override */\n    encode(src, b, offset = 0) {\n        /* Must force this to a string, lest it be a number and the\n         * \"utf8-encoding\" below actually allocate a buffer of length\n         * src */\n        if ('string' !== typeof src) {\n            src = String(src);\n        }\n        const srcb = buffer_1.Buffer.from(src, 'utf8');\n        const span = srcb.length;\n        if ((0 <= this.maxSpan)\n            && (this.maxSpan < span)) {\n            throw new RangeError('text length exceeds maxSpan');\n        }\n        if ((offset + span) > b.length) {\n            throw new RangeError('encoding overruns Buffer');\n        }\n        srcb.copy(uint8ArrayToBuffer(b), offset);\n        return span;\n    }\n}\nexports.UTF8 = UTF8;\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n    constructor(value, property) {\n        super(0, property);\n        /** The value produced by this constant when the layout is {@link\n         * Constant#decode|decoded}.\n         *\n         * Any JavaScript value including `null` and `undefined` is\n         * permitted.\n         *\n         * **WARNING** If `value` passed in the constructor was not\n         * frozen, it is possible for users of decoded values to change\n         * the content of the value. */\n        this.value = value;\n    }\n    /** @override */\n    decode(b, offset) {\n        return this.value;\n    }\n    /** @override */\n    encode(src, b, offset) {\n        /* Constants take no space */\n        return 0;\n    }\n}\nexports.Constant = Constant;\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = ((property) => new UInt(1, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = ((property) => new UInt(2, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = ((property) => new UInt(3, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = ((property) => new UInt(4, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = ((property) => new UInt(5, property));\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = ((property) => new UInt(6, property));\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = ((property) => new NearUInt64(property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = ((property) => new UIntBE(2, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = ((property) => new UIntBE(3, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = ((property) => new UIntBE(4, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = ((property) => new UIntBE(5, property));\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = ((property) => new UIntBE(6, property));\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = ((property) => new NearUInt64BE(property));\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = ((property) => new Int(1, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = ((property) => new Int(2, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = ((property) => new Int(3, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = ((property) => new Int(4, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = ((property) => new Int(5, property));\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = ((property) => new Int(6, property));\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = ((property) => new NearInt64(property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = ((property) => new IntBE(2, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = ((property) => new IntBE(3, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = ((property) => new IntBE(4, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = ((property) => new IntBE(5, property));\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = ((property) => new IntBE(6, property));\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = ((property) => new NearInt64BE(property));\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = ((property) => new Float(property));\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = ((property) => new FloatBE(property));\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = ((property) => new Double(property));\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = ((property) => new DoubleBE(property));\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n/** Factory for {@link CString} values. */\nexports.cstr = ((property) => new CString(property));\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n/** Factory for {@link Constant} values. */\nexports.constant = ((value, property) => new Constant(value, property));\n//# sourceMappingURL=Layout.js.map","import { Struct, Infer, Result, Context, Describe } from './struct'\nimport { Failure } from './error'\n\n/**\n * Check if a value is an iterator.\n */\n\nfunction isIterable<T>(x: unknown): x is Iterable<T> {\n  return isObject(x) && typeof x[Symbol.iterator] === 'function'\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isObject(x: unknown): x is object {\n  return typeof x === 'object' && x != null\n}\n\n/**\n * Check if a value is a plain object.\n */\n\nexport function isPlainObject(x: unknown): x is { [key: string]: any } {\n  if (Object.prototype.toString.call(x) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(x)\n  return prototype === null || prototype === Object.prototype\n}\n\n/**\n * Return a value as a printable string.\n */\n\nexport function print(value: any): string {\n  return typeof value === 'string' ? JSON.stringify(value) : `${value}`\n}\n\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\n\nexport function shiftIterator<T>(input: Iterator<T>): T | undefined {\n  const { done, value } = input.next()\n  return done ? undefined : value\n}\n\n/**\n * Convert a single validation result to a failure.\n */\n\nexport function toFailure<T, S>(\n  result: string | boolean | Partial<Failure>,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): Failure | undefined {\n  if (result === true) {\n    return\n  } else if (result === false) {\n    result = {}\n  } else if (typeof result === 'string') {\n    result = { message: result }\n  }\n\n  const { path, branch } = context\n  const { type } = struct\n  const {\n    refinement,\n    message = `Expected a value of type \\`${type}\\`${\n      refinement ? ` with refinement \\`${refinement}\\`` : ''\n    }, but received: \\`${print(value)}\\``,\n  } = result\n\n  return {\n    value,\n    type,\n    refinement,\n    key: path[path.length - 1],\n    path,\n    branch,\n    ...result,\n    message,\n  }\n}\n\n/**\n * Convert a validation result to an iterable of failures.\n */\n\nexport function* toFailures<T, S>(\n  result: Result,\n  context: Context,\n  struct: Struct<T, S>,\n  value: any\n): IterableIterator<Failure> {\n  if (!isIterable(result)) {\n    result = [result]\n  }\n\n  for (const r of result) {\n    const failure = toFailure(r, context, struct, value)\n\n    if (failure) {\n      yield failure\n    }\n  }\n}\n\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\n\nexport function* run<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    path?: any[]\n    branch?: any[]\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): IterableIterator<[Failure, undefined] | [undefined, T]> {\n  const { path = [], branch = [value], coerce = false, mask = false } = options\n  const ctx: Context = { path, branch }\n\n  if (coerce) {\n    value = struct.coercer(value, ctx)\n\n    if (\n      mask &&\n      struct.type !== 'type' &&\n      isObject(struct.schema) &&\n      isObject(value) &&\n      !Array.isArray(value)\n    ) {\n      for (const key in value) {\n        if (struct.schema[key] === undefined) {\n          delete value[key]\n        }\n      }\n    }\n  }\n\n  let valid = true\n\n  for (const failure of struct.validator(value, ctx)) {\n    valid = false\n    yield [failure, undefined]\n  }\n\n  for (let [k, v, s] of struct.entries(value, ctx)) {\n    const ts = run(v, s as Struct, {\n      path: k === undefined ? path : [...path, k],\n      branch: k === undefined ? branch : [...branch, v],\n      coerce,\n      mask,\n    })\n\n    for (const t of ts) {\n      if (t[0]) {\n        valid = false\n        yield [t[0], undefined]\n      } else if (coerce) {\n        v = t[1]\n\n        if (k === undefined) {\n          value = v\n        } else if (value instanceof Map) {\n          value.set(k, v)\n        } else if (value instanceof Set) {\n          value.add(v)\n        } else if (isObject(value)) {\n          value[k] = v\n        }\n      }\n    }\n  }\n\n  if (valid) {\n    for (const failure of struct.refiner(value as T, ctx)) {\n      valid = false\n      yield [failure, undefined]\n    }\n  }\n\n  if (valid) {\n    yield [undefined, value as T]\n  }\n}\n\n/**\n * Assign properties from one type to another, overwriting existing.\n */\n\nexport type Assign<T, U> = Simplify<U & Omit<T, keyof U>>\n\n/**\n * A schema for enum structs.\n */\n\nexport type EnumSchema<T extends string | number> = { [K in T]: K }\n\n/**\n * Check if a type is an exact match.\n */\n\nexport type IsMatch<T, G> = T extends G ? (G extends T ? T : never) : never\n\n/**\n * Check if a type is a record type.\n */\n\nexport type IsRecord<T> = T extends object\n  ? string extends keyof T\n    ? T\n    : never\n  : never\n/**\n * Check if a type is a tuple.\n */\n\nexport type IsTuple<T> = T extends [any]\n  ? T\n  : T extends [any, any]\n  ? T\n  : T extends [any, any, any]\n  ? T\n  : T extends [any, any, any, any]\n  ? T\n  : T extends [any, any, any, any, any]\n  ? T\n  : never\n\n/**\n * Check if a type is a union.\n */\n\nexport type IsUnion<T, U extends T = T> = (\n  T extends any ? (U extends T ? false : true) : false\n) extends false\n  ? never\n  : T\n\n/**\n * A schema for object structs.\n */\n\nexport type ObjectSchema = Record<string, Struct<any, any>>\n\n/**\n * Infer a type from an object struct schema.\n */\n\nexport type ObjectType<S extends ObjectSchema> = Simplify<\n  Optionalize<{ [K in keyof S]: Infer<S[K]> }>\n>\n\n/**\n * Omit properties from a type that extend from a specific type.\n */\n\nexport type OmitBy<T, V> = Omit<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Normalize properties of a type that allow `undefined` to make them optional.\n */\n\nexport type Optionalize<S extends object> = OmitBy<S, undefined> &\n  Partial<PickBy<S, undefined>>\n\n/**\n * Transform an object schema type to represent a partial.\n */\n\nexport type PartialObjectSchema<S extends ObjectSchema> = {\n  [K in keyof S]: Struct<Infer<S[K]> | undefined>\n}\n\n/**\n * Pick properties from a type that extend from a specific type.\n */\n\nexport type PickBy<T, V> = Pick<\n  T,\n  { [K in keyof T]: V extends Extract<T[K], V> ? K : never }[keyof T]\n>\n\n/**\n * Simplifies a type definition to its most basic representation.\n */\n\nexport type Simplify<T> = T extends any[] | Date\n  ? T\n  : { [K in keyof T]: T[K] } & {}\n\nexport type If<B extends Boolean, Then, Else> = B extends true ? Then : Else\n\n/**\n * A schema for any type of struct.\n */\n\nexport type StructSchema<T> = [T] extends [string]\n  ? [T] extends [IsMatch<T, string>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [number]\n  ? [T] extends [IsMatch<T, number>]\n    ? null\n    : [T] extends [IsUnion<T>]\n    ? EnumSchema<T>\n    : T\n  : [T] extends [boolean]\n  ? [T] extends [IsMatch<T, boolean>]\n    ? null\n    : T\n  : T extends\n      | bigint\n      | symbol\n      | undefined\n      | null\n      | Function\n      | Date\n      | Error\n      | RegExp\n      | Map<any, any>\n      | WeakMap<any, any>\n      | Set<any>\n      | WeakSet<any>\n      | Promise<any>\n  ? null\n  : T extends Array<infer E>\n  ? T extends IsTuple<T>\n    ? null\n    : Struct<E>\n  : T extends object\n  ? T extends IsRecord<T>\n    ? null\n    : { [K in keyof T]: Describe<T[K]> }\n  : null\n\n/**\n * A schema for tuple structs.\n */\n\nexport type TupleSchema<T> = { [K in keyof T]: Struct<T[K]> }\n","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n\nexport type Failure = {\n  value: any\n  key: any\n  type: string\n  refinement: string | undefined\n  message: string\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\n\nexport class StructError extends TypeError {\n  value: any\n  key!: any\n  type!: string\n  refinement!: string | undefined\n  path!: Array<any>\n  branch!: Array<any>\n  failures: () => Array<Failure>;\n  [x: string]: any\n\n  constructor(failure: Failure, failures: () => Generator<Failure>) {\n    let cached: Array<Failure> | undefined\n    const { message, ...rest } = failure\n    const { path } = failure\n    const msg =\n      path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`\n    super(msg)\n    Object.assign(this, rest)\n    this.name = this.constructor.name\n    this.failures = () => {\n      return (cached ??= [failure, ...failures()])\n    }\n  }\n}\n","import { toFailures, shiftIterator, StructSchema, run } from './utils'\nimport { StructError, Failure } from './error'\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\n\nexport class Struct<T = unknown, S = unknown> {\n  readonly TYPE!: T\n  type: string\n  schema: S\n  coercer: (value: unknown, context: Context) => unknown\n  validator: (value: unknown, context: Context) => Iterable<Failure>\n  refiner: (value: T, context: Context) => Iterable<Failure>\n  entries: (\n    value: unknown,\n    context: Context\n  ) => Iterable<[string | number, unknown, Struct<any> | Struct<never>]>\n\n  constructor(props: {\n    type: string\n    schema: S\n    coercer?: Coercer\n    validator?: Validator\n    refiner?: Refiner<T>\n    entries?: Struct<T, S>['entries']\n  }) {\n    const {\n      type,\n      schema,\n      validator,\n      refiner,\n      coercer = (value: unknown) => value,\n      entries = function* () {},\n    } = props\n\n    this.type = type\n    this.schema = schema\n    this.entries = entries\n    this.coercer = coercer\n\n    if (validator) {\n      this.validator = (value, context) => {\n        const result = validator(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.validator = () => []\n    }\n\n    if (refiner) {\n      this.refiner = (value, context) => {\n        const result = refiner(value, context)\n        return toFailures(result, context, this, value)\n      }\n    } else {\n      this.refiner = () => []\n    }\n  }\n\n  /**\n   * Assert that a value passes the struct's validation, throwing if it doesn't.\n   */\n\n  assert(value: unknown): asserts value is T {\n    return assert(value, this)\n  }\n\n  /**\n   * Create a value with the struct's coercion logic, then validate it.\n   */\n\n  create(value: unknown): T {\n    return create(value, this)\n  }\n\n  /**\n   * Check if a value passes the struct's validation.\n   */\n\n  is(value: unknown): value is T {\n    return is(value, this)\n  }\n\n  /**\n   * Mask a value, coercing and validating it, but returning only the subset of\n   * properties defined by the struct's schema.\n   */\n\n  mask(value: unknown): T {\n    return mask(value, this)\n  }\n\n  /**\n   * Validate a value with the struct's validation logic, returning a tuple\n   * representing the result.\n   *\n   * You may optionally pass `true` for the `withCoercion` argument to coerce\n   * the value before attempting to validate it. If you do, the result will\n   * contain the coerced result when successful.\n   */\n\n  validate(\n    value: unknown,\n    options: {\n      coerce?: boolean\n    } = {}\n  ): [StructError, undefined] | [undefined, T] {\n    return validate(value, this, options)\n  }\n}\n\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\n\nexport function assert<T, S>(\n  value: unknown,\n  struct: Struct<T, S>\n): asserts value is T {\n  const result = validate(value, struct)\n\n  if (result[0]) {\n    throw result[0]\n  }\n}\n\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\n\nexport function create<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\n\nexport function mask<T, S>(value: unknown, struct: Struct<T, S>): T {\n  const result = validate(value, struct, { coerce: true, mask: true })\n\n  if (result[0]) {\n    throw result[0]\n  } else {\n    return result[1]\n  }\n}\n\n/**\n * Check if a value passes a struct.\n */\n\nexport function is<T, S>(value: unknown, struct: Struct<T, S>): value is T {\n  const result = validate(value, struct)\n  return !result[0]\n}\n\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\n\nexport function validate<T, S>(\n  value: unknown,\n  struct: Struct<T, S>,\n  options: {\n    coerce?: boolean\n    mask?: boolean\n  } = {}\n): [StructError, undefined] | [undefined, T] {\n  const tuples = run(value, struct, options)\n  const tuple = shiftIterator(tuples)!\n\n  if (tuple[0]) {\n    const error = new StructError(tuple[0], function* () {\n      for (const t of tuples) {\n        if (t[0]) {\n          yield t[0]\n        }\n      }\n    })\n\n    return [error, undefined]\n  } else {\n    const v = tuple[1]\n    return [undefined, v]\n  }\n}\n\n/**\n * A `Context` contains information about the current location of the\n * validation inside the initial input value.\n */\n\nexport type Context = {\n  branch: Array<any>\n  path: Array<any>\n}\n\n/**\n * A type utility to extract the type from a `Struct` class.\n */\n\nexport type Infer<T extends Struct<any, any>> = T['TYPE']\n\n/**\n * A type utility to describe that a struct represents a TypeScript type.\n */\n\nexport type Describe<T> = Struct<T, StructSchema<T>>\n\n/**\n * A `Result` is returned from validation functions.\n */\n\nexport type Result =\n  | boolean\n  | string\n  | Partial<Failure>\n  | Iterable<boolean | string | Partial<Failure>>\n\n/**\n * A `Coercer` takes an unknown value and optionally coerces it.\n */\n\nexport type Coercer<T = unknown> = (value: T, context: Context) => unknown\n\n/**\n * A `Validator` takes an unknown value and validates it.\n */\n\nexport type Validator = (value: unknown, context: Context) => Result\n\n/**\n * A `Refiner` takes a value of a known type and validates it against a further\n * constraint.\n */\n\nexport type Refiner<T> = (value: T, context: Context) => Result\n","import { Struct, Context, Validator } from '../struct'\nimport { object, optional } from './types'\nimport { ObjectSchema, Assign, ObjectType, PartialObjectSchema } from '../utils'\n\n/**\n * Create a new struct that combines the properties properties from multiple\n * object structs.\n *\n * Like JavaScript's `Object.assign` utility.\n */\n\nexport function assign<A extends ObjectSchema, B extends ObjectSchema>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>\n): Struct<ObjectType<Assign<A, B>>, Assign<A, B>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>\n): Struct<ObjectType<Assign<Assign<A, B>, C>>, Assign<Assign<A, B>, C>>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>\n): Struct<\n  ObjectType<Assign<Assign<Assign<A, B>, C>, D>>,\n  Assign<Assign<Assign<A, B>, C>, D>\n>\nexport function assign<\n  A extends ObjectSchema,\n  B extends ObjectSchema,\n  C extends ObjectSchema,\n  D extends ObjectSchema,\n  E extends ObjectSchema\n>(\n  A: Struct<ObjectType<A>, A>,\n  B: Struct<ObjectType<B>, B>,\n  C: Struct<ObjectType<C>, C>,\n  D: Struct<ObjectType<D>, D>,\n  E: Struct<ObjectType<E>, E>\n): Struct<\n  ObjectType<Assign<Assign<Assign<Assign<A, B>, C>, D>, E>>,\n  Assign<Assign<Assign<Assign<A, B>, C>, D>, E>\n>\nexport function assign(...Structs: Struct<any>[]): any {\n  const schemas = Structs.map((s) => s.schema)\n  const schema = Object.assign({}, ...schemas)\n  return object(schema)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n */\n\nexport function define<T>(name: string, validator: Validator): Struct<T, null> {\n  return new Struct({ type: name, schema: null, validator })\n}\n\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\n\nexport function deprecated<T>(\n  struct: Struct<T>,\n  log: (value: unknown, ctx: Context) => void\n): Struct<T> {\n  return new Struct({\n    ...struct,\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    validator(value, ctx) {\n      if (value === undefined) {\n        return true\n      } else {\n        log(value, ctx)\n        return struct.validator(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\n\nexport function dynamic<T>(\n  fn: (value: unknown, ctx: Context) => Struct<T, any>\n): Struct<T, null> {\n  return new Struct({\n    type: 'dynamic',\n    schema: null,\n    *entries(value, ctx) {\n      const struct = fn(value, ctx)\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      const struct = fn(value, ctx)\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\n\nexport function lazy<T>(fn: () => Struct<T, any>): Struct<T, null> {\n  let struct: Struct<T, any> | undefined\n  return new Struct({\n    type: 'lazy',\n    schema: null,\n    *entries(value, ctx) {\n      struct ??= fn()\n      yield* struct.entries(value, ctx)\n    },\n    validator(value, ctx) {\n      struct ??= fn()\n      return struct.validator(value, ctx)\n    },\n    coercer(value, ctx) {\n      struct ??= fn()\n      return struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\n\nexport function omit<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Omit<S, K>>, Omit<S, K>> {\n  const { schema } = struct\n  const subschema: any = { ...schema }\n\n  for (const key of keys) {\n    delete subschema[key]\n  }\n\n  return object(subschema as Omit<S, K>)\n}\n\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\n\nexport function partial<S extends ObjectSchema>(\n  struct: Struct<ObjectType<S>, S> | S\n): Struct<ObjectType<PartialObjectSchema<S>>, PartialObjectSchema<S>> {\n  const schema: any =\n    struct instanceof Struct ? { ...struct.schema } : { ...struct }\n\n  for (const key in schema) {\n    schema[key] = optional(schema[key])\n  }\n\n  return object(schema) as any\n}\n\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\n\nexport function pick<S extends ObjectSchema, K extends keyof S>(\n  struct: Struct<ObjectType<S>, S>,\n  keys: K[]\n): Struct<ObjectType<Pick<S, K>>, Pick<S, K>> {\n  const { schema } = struct\n  const subschema: any = {}\n\n  for (const key of keys) {\n    subschema[key] = schema[key]\n  }\n\n  return object(subschema as Pick<S, K>)\n}\n\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\n\nexport function struct<T>(name: string, validator: Validator): Struct<T, null> {\n  console.warn(\n    'superstruct@0.11 - The `struct` helper has been renamed to `define`.'\n  )\n\n  return define(name, validator)\n}\n","import { Infer, Struct } from '../struct'\nimport { define } from './utilities'\nimport {\n  TupleSchema,\n  ObjectSchema,\n  ObjectType,\n  print,\n  run,\n  isObject,\n} from '../utils'\n\n/**\n * Ensure that any value passes validation.\n */\n\nexport function any(): Struct<any, null> {\n  return define('any', () => true)\n}\n\n/**\n * Ensure that a value is an array and that its elements are of a specific type.\n *\n * Note: If you omit the element struct, the arrays elements will not be\n * iterated at all. This can be helpful for cases where performance is critical,\n * and it is preferred to using `array(any())`.\n */\n\nexport function array<T extends Struct<any>>(Element: T): Struct<Infer<T>[], T>\nexport function array(): Struct<unknown[], undefined>\nexport function array<T extends Struct<any>>(Element?: T): any {\n  return new Struct({\n    type: 'array',\n    schema: Element,\n    *entries(value) {\n      if (Element && Array.isArray(value)) {\n        for (const [i, v] of value.entries()) {\n          yield [i, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return Array.isArray(value) ? value.slice() : value\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array value, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a boolean.\n */\n\nexport function boolean(): Struct<boolean, null> {\n  return define('boolean', (value) => {\n    return typeof value === 'boolean'\n  })\n}\n\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\n\nexport function date(): Struct<Date, null> {\n  return define('date', (value) => {\n    return (\n      (value instanceof Date && !isNaN(value.getTime())) ||\n      `Expected a valid \\`Date\\` object, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is one of a set of potential values.\n *\n * Note: after creating the struct, you can access the definition of the\n * potential values as `struct.schema`.\n */\n\nexport function enums<T extends number>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends string>(\n  values: readonly T[]\n): Struct<T, { [K in T[][number]]: K }>\nexport function enums<T extends number | string>(values: readonly T[]): any {\n  const schema: any = {}\n  const description = values.map((v) => print(v)).join()\n\n  for (const key of values) {\n    schema[key] = key\n  }\n\n  return new Struct({\n    type: 'enums',\n    schema,\n    validator(value) {\n      return (\n        values.includes(value as any) ||\n        `Expected one of \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a function.\n */\n\nexport function func(): Struct<Function, null> {\n  return define('func', (value) => {\n    return (\n      typeof value === 'function' ||\n      `Expected a function, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an instance of a specific class.\n */\n\nexport function instance<T extends { new (...args: any): any }>(\n  Class: T\n): Struct<InstanceType<T>, null> {\n  return define('instance', (value) => {\n    return (\n      value instanceof Class ||\n      `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an integer.\n */\n\nexport function integer(): Struct<number, null> {\n  return define('integer', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n      `Expected an integer, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value matches all of a set of types.\n */\n\nexport function intersection<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function intersection<A, B>(\n  Structs: TupleSchema<[A, B]>\n): Struct<A & B, null>\nexport function intersection<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A & B & C, null>\nexport function intersection<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A & B & C & D, null>\nexport function intersection<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A & B & C & D & E, null>\nexport function intersection<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A & B & C & D & E & F, null>\nexport function intersection<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A & B & C & D & E & F & G, null>\nexport function intersection<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A & B & C & D & E & F & G & H, null>\nexport function intersection<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A & B & C & D & E & F & G & H & I, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A & B & C & D & E & F & G & H & I & J, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P, null>\nexport function intersection<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A & B & C & D & E & F & G & H & I & J & K & L & M & N & O & P & Q,\n  null\n>\nexport function intersection(Structs: Array<Struct<any, any>>): any {\n  return new Struct({\n    type: 'intersection',\n    schema: null,\n    *entries(value, ctx) {\n      for (const S of Structs) {\n        yield* S.entries(value, ctx)\n      }\n    },\n    *validator(value, ctx) {\n      for (const S of Structs) {\n        yield* S.validator(value, ctx)\n      }\n    },\n    *refiner(value, ctx) {\n      for (const S of Structs) {\n        yield* S.refiner(value, ctx)\n      }\n    },\n  })\n}\n\n/**\n * Ensure that a value is an exact value, using `===` for comparison.\n */\n\nexport function literal<T extends boolean>(constant: T): Struct<T, T>\nexport function literal<T extends number>(constant: T): Struct<T, T>\nexport function literal<T extends string>(constant: T): Struct<T, T>\nexport function literal<T>(constant: T): Struct<T, null>\nexport function literal<T>(constant: T): any {\n  const description = print(constant)\n  const t = typeof constant\n  return new Struct({\n    type: 'literal',\n    schema:\n      t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n    validator(value) {\n      return (\n        value === constant ||\n        `Expected the literal \\`${description}\\`, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `Map` object, and that its keys and values are of\n * specific types.\n */\n\nexport function map(): Struct<Map<unknown, unknown>, null>\nexport function map<K, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Map<K, V>, null>\nexport function map<K, V>(Key?: Struct<K>, Value?: Struct<V>): any {\n  return new Struct({\n    type: 'map',\n    schema: null,\n    *entries(value) {\n      if (Key && Value && value instanceof Map) {\n        for (const [k, v] of value.entries()) {\n          yield [k as string, k, Key]\n          yield [k as string, v, Value]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Map ? new Map(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Map ||\n        `Expected a \\`Map\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that no value ever passes validation.\n */\n\nexport function never(): Struct<never, null> {\n  return define('never', () => false)\n}\n\n/**\n * Augment an existing struct to allow `null` values.\n */\n\nexport function nullable<T, S>(struct: Struct<T, S>): Struct<T | null, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) => value === null || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is a number.\n */\n\nexport function number(): Struct<number, null> {\n  return define('number', (value) => {\n    return (\n      (typeof value === 'number' && !isNaN(value)) ||\n      `Expected a number, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is an object, that is has a known set of properties,\n * and that its properties are of specific types.\n *\n * Note: Unrecognized properties will fail validation.\n */\n\nexport function object(): Struct<Record<string, unknown>, null>\nexport function object<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S>\nexport function object<S extends ObjectSchema>(schema?: S): any {\n  const knowns = schema ? Object.keys(schema) : []\n  const Never = never()\n  return new Struct({\n    type: 'object',\n    schema: schema ? schema : null,\n    *entries(value) {\n      if (schema && isObject(value)) {\n        const unknowns = new Set(Object.keys(value))\n\n        for (const key of knowns) {\n          unknowns.delete(key)\n          yield [key, value[key], schema[key]]\n        }\n\n        for (const key of unknowns) {\n          yield [key, value[key], Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n    coercer(value) {\n      return isObject(value) ? { ...value } : value\n    },\n  })\n}\n\n/**\n * Augment a struct to allow `undefined` values.\n */\n\nexport function optional<T, S>(struct: Struct<T, S>): Struct<T | undefined, S> {\n  return new Struct({\n    ...struct,\n    validator: (value, ctx) =>\n      value === undefined || struct.validator(value, ctx),\n    refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n  })\n}\n\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\n\nexport function record<K extends string, V>(\n  Key: Struct<K>,\n  Value: Struct<V>\n): Struct<Record<K, V>, null> {\n  return new Struct({\n    type: 'record',\n    schema: null,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k in value) {\n          const v = value[k]\n          yield [k, k, Key]\n          yield [k, v, Value]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\n\nexport function regexp(): Struct<RegExp, null> {\n  return define('regexp', (value) => {\n    return value instanceof RegExp\n  })\n}\n\n/**\n * Ensure that a value is a `Set` object, and that its elements are of a\n * specific type.\n */\n\nexport function set(): Struct<Set<unknown>, null>\nexport function set<T>(Element: Struct<T>): Struct<Set<T>, null>\nexport function set<T>(Element?: Struct<T>): any {\n  return new Struct({\n    type: 'set',\n    schema: null,\n    *entries(value) {\n      if (Element && value instanceof Set) {\n        for (const v of value) {\n          yield [v as string, v, Element]\n        }\n      }\n    },\n    coercer(value) {\n      return value instanceof Set ? new Set(value) : value\n    },\n    validator(value) {\n      return (\n        value instanceof Set ||\n        `Expected a \\`Set\\` object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value is a string.\n */\n\nexport function string(): Struct<string, null> {\n  return define('string', (value) => {\n    return (\n      typeof value === 'string' ||\n      `Expected a string, but received: ${print(value)}`\n    )\n  })\n}\n\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\n\nexport function tuple<A>(Structs: TupleSchema<[A]>): Struct<[A], null>\nexport function tuple<A, B>(Structs: TupleSchema<[A, B]>): Struct<[A, B], null>\nexport function tuple<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<[A, B, C], null>\nexport function tuple<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<[A, B, C, D], null>\nexport function tuple<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<[A, B, C, D, E], null>\nexport function tuple<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<[A, B, C, D, E, F], null>\nexport function tuple<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<[A, B, C, D, E, F, G], null>\nexport function tuple<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<[A, B, C, D, E, F, G, H], null>\nexport function tuple<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<[A, B, C, D, E, F, G, H, I], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<[A, B, C, D, E, F, G, H, I, J], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P], null>\nexport function tuple<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q], null>\nexport function tuple(Elements: Struct<any>[]): any {\n  const Never = never()\n\n  return new Struct({\n    type: 'tuple',\n    schema: null,\n    *entries(value) {\n      if (Array.isArray(value)) {\n        const length = Math.max(Elements.length, value.length)\n\n        for (let i = 0; i < length; i++) {\n          yield [i, value[i], Elements[i] || Never]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        Array.isArray(value) ||\n        `Expected an array, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\n\nexport function type<S extends ObjectSchema>(\n  schema: S\n): Struct<ObjectType<S>, S> {\n  const keys = Object.keys(schema)\n  return new Struct({\n    type: 'type',\n    schema,\n    *entries(value) {\n      if (isObject(value)) {\n        for (const k of keys) {\n          yield [k, value[k], schema[k]]\n        }\n      }\n    },\n    validator(value) {\n      return (\n        isObject(value) || `Expected an object, but received: ${print(value)}`\n      )\n    },\n  })\n}\n\n/**\n * Ensure that a value matches one of a set of types.\n */\n\nexport function union<A>(Structs: TupleSchema<[A]>): Struct<A, null>\nexport function union<A, B>(Structs: TupleSchema<[A, B]>): Struct<A | B, null>\nexport function union<A, B, C>(\n  Structs: TupleSchema<[A, B, C]>\n): Struct<A | B | C, null>\nexport function union<A, B, C, D>(\n  Structs: TupleSchema<[A, B, C, D]>\n): Struct<A | B | C | D, null>\nexport function union<A, B, C, D, E>(\n  Structs: TupleSchema<[A, B, C, D, E]>\n): Struct<A | B | C | D | E, null>\nexport function union<A, B, C, D, E, F>(\n  Structs: TupleSchema<[A, B, C, D, E, F]>\n): Struct<A | B | C | D | E | F, null>\nexport function union<A, B, C, D, E, F, G>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G]>\n): Struct<A | B | C | D | E | F | G, null>\nexport function union<A, B, C, D, E, F, G, H>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H]>\n): Struct<A | B | C | D | E | F | G | H, null>\nexport function union<A, B, C, D, E, F, G, H, I>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I]>\n): Struct<A | B | C | D | E | F | G | H | I, null>\nexport function union<A, B, C, D, E, F, G, H, I, J>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J]>\n): Struct<A | B | C | D | E | F | G | H | I | J, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P]>\n): Struct<A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P, null>\nexport function union<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(\n  Structs: TupleSchema<[A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q]>\n): Struct<\n  A | B | C | D | E | F | G | H | I | J | K | L | M | N | O | P | Q,\n  null\n>\nexport function union(Structs: Struct<any>[]): any {\n  const description = Structs.map((s) => s.type).join(' | ')\n  return new Struct({\n    type: 'union',\n    schema: null,\n    validator(value, ctx) {\n      const failures = []\n\n      for (const S of Structs) {\n        const [...tuples] = run(value, S, ctx)\n        const [first] = tuples\n\n        if (!first[0]) {\n          return []\n        } else {\n          for (const [failure] of tuples) {\n            if (failure) {\n              failures.push(failure)\n            }\n          }\n        }\n      }\n\n      return [\n        `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(\n          value\n        )}`,\n        ...failures,\n      ]\n    },\n  })\n}\n\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\n\nexport function unknown(): Struct<unknown, null> {\n  return define('unknown', () => true)\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { Struct, is, Coercer } from '../struct'\nimport { isPlainObject } from '../utils'\nimport { string, unknown } from './types'\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function coerce<T, S, C>(\n  struct: Struct<T, S>,\n  condition: Struct<C, any>,\n  coercer: Coercer<C>\n): Struct<T, S> {\n  return new Struct({\n    ...struct,\n    coercer: (value, ctx) => {\n      return is(value, condition)\n        ? struct.coercer(coercer(value, ctx), ctx)\n        : struct.coercer(value, ctx)\n    },\n  })\n}\n\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function defaulted<T, S>(\n  struct: Struct<T, S>,\n  fallback: any,\n  options: {\n    strict?: boolean\n  } = {}\n): Struct<T, S> {\n  return coerce(struct, unknown(), (x) => {\n    const f = typeof fallback === 'function' ? fallback() : fallback\n\n    if (x === undefined) {\n      return f\n    }\n\n    if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n      const ret = { ...x }\n      let changed = false\n\n      for (const key in f) {\n        if (ret[key] === undefined) {\n          ret[key] = f[key]\n          changed = true\n        }\n      }\n\n      if (changed) {\n        return ret\n      }\n    }\n\n    return x\n  })\n}\n\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\n\nexport function trimmed<T, S>(struct: Struct<T, S>): Struct<T, S> {\n  return coerce(struct, string(), (x) => x.trim())\n}\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return is_on_curve(pubkey.toBytes()) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {\n  PACKET_DATA_SIZE,\n  SIGNATURE_LENGTH_IN_BYTES,\n} from './transaction-constants';\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?: TransactionBlockhashCtor | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const newOpts = opts as TransactionBlockhashCtor;\n      Object.assign(this, newOpts);\n      this.recentBlockhash = newOpts.blockhash;\n      this.lastValidBlockHeight = newOpts.lastValidBlockHeight;\n    } else {\n      const oldOpts = opts as TransactionCtorFields_DEPRECATED;\n      Object.assign(this, oldOpts);\n      this.recentBlockhash = oldOpts.recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      return x.pubkey.toBase58().localeCompare(y.pubkey.toBase58());\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH_IN_BYTES);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status =\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n      ? (\n          await connection.confirmTransaction(\n            {\n              signature: signature,\n              blockhash: transaction.recentBlockhash,\n              lastValidBlockHeight: transaction.lastValidBlockHeight,\n            },\n            options && options.commitment,\n          )\n        ).value\n      : (\n          await connection.confirmTransaction(\n            signature,\n            options && options.commitment,\n          )\n        ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\nimport {u64} from './util/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\nimport {PACKET_DATA_SIZE} from './transaction-constants';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport {u64} from './util/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport fetchImpl, {Response} from './fetch-impl';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction, TransactionStatus} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {toBuffer} from './util/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredTimeoutError,\n} from './util/tx-expiry-custom-errors';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy = {\n  signature: TransactionSignature;\n} & BlockhashWithExpiryBlockHeight;\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: BlockheightBasedTransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` using a `TransactionConfirmationConfig` */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy:\n      | BlockheightBasedTransactionConfirmationStrategy\n      | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config =\n        strategy as BlockheightBasedTransactionConfirmationStrategy;\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const subscriptionCommitment = commitment || this.commitment;\n    let timeoutId;\n    let subscriptionId;\n    let done = false;\n\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          rawSignature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            done = true;\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    const checkBlockHeight = async () => {\n      try {\n        const blockHeight = await this.getBlockHeight(commitment);\n        return blockHeight;\n      } catch (_e) {\n        return -1;\n      }\n    };\n\n    const expiryPromise = new Promise<\n      | {__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED}\n      | {__type: TransactionStatus.TIMED_OUT; timeoutMs: number}\n    >(resolve => {\n      if (typeof strategy === 'string') {\n        let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n        switch (subscriptionCommitment) {\n          case 'processed':\n          case 'recent':\n          case 'single':\n          case 'confirmed':\n          case 'singleGossip': {\n            timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n            break;\n          }\n          // exhaust enums to ensure full coverage\n          case 'finalized':\n          case 'max':\n          case 'root':\n        }\n\n        timeoutId = setTimeout(\n          () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n          timeoutMs,\n        );\n      } else {\n        let config =\n          strategy as BlockheightBasedTransactionConfirmationStrategy;\n        (async () => {\n          let currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n          while (currentBlockHeight <= config.lastValidBlockHeight) {\n            await sleep(1000);\n            if (done) return;\n            currentBlockHeight = await checkBlockHeight();\n            if (done) return;\n          }\n          resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n        })();\n      }\n    });\n\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      switch (outcome.__type) {\n        case TransactionStatus.BLOCKHEIGHT_EXCEEDED:\n          throw new TransactionExpiredBlockheightExceededError(rawSignature);\n        case TransactionStatus.PROCESSED:\n          result = outcome.response;\n          break;\n        case TransactionStatus.TIMED_OUT:\n          throw new TransactionExpiredTimeoutError(\n            rawSignature,\n            outcome.timeoutMs / 1000,\n          );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(TransactionResponse | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash = await this._blockhashWithExpiryBlockHeight(\n          disableCache,\n        );\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration++;\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._subscriptionsByHash[hash] = {\n        ...subscription,\n        state: 'pending',\n      };\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'subscribing',\n                };\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                };\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'pending',\n                };\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._subscriptionsByHash[hash] = {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  };\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._subscriptionsByHash[hash] = {\n                      ...subscription,\n                      state: 'subscribed',\n                    };\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._subscriptionsByHash[hash] = {\n                  ...subscription,\n                  state: 'unsubscribed',\n                };\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify(\n      [subscriptionConfig.method, args],\n      true /* isArrayProp */,\n    );\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeState::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = void 0;\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _websocket = _interopRequireDefault(require(\"./lib/client/websocket.browser\"));\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Client = /*#__PURE__*/function (_CommonClient) {\n  (0, _inherits2[\"default\"])(Client, _CommonClient);\n\n  var _super = _createSuper(Client);\n\n  function Client() {\n    var address = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"ws://localhost:8080\";\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$autoconnect = _ref.autoconnect,\n        autoconnect = _ref$autoconnect === void 0 ? true : _ref$autoconnect,\n        _ref$reconnect = _ref.reconnect,\n        reconnect = _ref$reconnect === void 0 ? true : _ref$reconnect,\n        _ref$reconnect_interv = _ref.reconnect_interval,\n        reconnect_interval = _ref$reconnect_interv === void 0 ? 1000 : _ref$reconnect_interv,\n        _ref$max_reconnects = _ref.max_reconnects,\n        max_reconnects = _ref$max_reconnects === void 0 ? 5 : _ref$max_reconnects;\n\n    var generate_request_id = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, Client);\n    return _super.call(this, _websocket[\"default\"], address, {\n      autoconnect: autoconnect,\n      reconnect: reconnect,\n      reconnect_interval: reconnect_interval,\n      max_reconnects: max_reconnects\n    }, generate_request_id);\n  }\n\n  return (0, _createClass2[\"default\"])(Client);\n}(_client[\"default\"]);\n\nexports.Client = Client;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar WebSocketBrowserImpl = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(WebSocketBrowserImpl, _EventEmitter);\n\n  var _super = _createSuper(WebSocketBrowserImpl);\n\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  function WebSocketBrowserImpl(address, options, protocols) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, WebSocketBrowserImpl);\n    _this = _super.call(this);\n    _this.socket = new window.WebSocket(address, protocols);\n\n    _this.socket.onopen = function () {\n      return _this.emit(\"open\");\n    };\n\n    _this.socket.onmessage = function (event) {\n      return _this.emit(\"message\", event.data);\n    };\n\n    _this.socket.onerror = function (error) {\n      return _this.emit(\"error\", error);\n    };\n\n    _this.socket.onclose = function (event) {\n      _this.emit(\"close\", event.code, event.reason);\n    };\n\n    return _this;\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(WebSocketBrowserImpl, [{\n    key: \"send\",\n    value: function send(data, optionsOrCallback, callback) {\n      var cb = callback || optionsOrCallback;\n\n      try {\n        this.socket.send(data);\n        cb();\n      } catch (error) {\n        cb(error);\n      }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, reason) {\n      this.socket.close(code, reason);\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(type, listener, options) {\n      this.socket.addEventListener(type, listener, options);\n    }\n  }]);\n  return WebSocketBrowserImpl;\n}(_eventemitter.EventEmitter);\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\n\n\nfunction _default(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _eventemitter = require(\"eventemitter3\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2[\"default\"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2[\"default\"])(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}; // @ts-ignore\n\n\nvar CommonClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2[\"default\"])(CommonClient, _EventEmitter);\n\n  var _super = _createSuper(CommonClient);\n\n  /**\n   * Instantiate a Client class.\n   * @constructor\n   * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n   * @param {String} address - url to a websocket server\n   * @param {Object} options - ws options object with reconnect parameters\n   * @param {Function} generate_request_id - custom generation request Id\n   * @return {CommonClient}\n   */\n  function CommonClient(webSocketFactory) {\n    var _this;\n\n    var address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ws://localhost:8080\";\n\n    var _a = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var generate_request_id = arguments.length > 3 ? arguments[3] : undefined;\n    (0, _classCallCheck2[\"default\"])(this, CommonClient);\n\n    var _a$autoconnect = _a.autoconnect,\n        autoconnect = _a$autoconnect === void 0 ? true : _a$autoconnect,\n        _a$reconnect = _a.reconnect,\n        reconnect = _a$reconnect === void 0 ? true : _a$reconnect,\n        _a$reconnect_interval = _a.reconnect_interval,\n        reconnect_interval = _a$reconnect_interval === void 0 ? 1000 : _a$reconnect_interval,\n        _a$max_reconnects = _a.max_reconnects,\n        max_reconnects = _a$max_reconnects === void 0 ? 5 : _a$max_reconnects,\n        rest_options = __rest(_a, [\"autoconnect\", \"reconnect\", \"reconnect_interval\", \"max_reconnects\"]);\n\n    _this = _super.call(this);\n    _this.webSocketFactory = webSocketFactory;\n    _this.queue = {};\n    _this.rpc_id = 0;\n    _this.address = address;\n    _this.autoconnect = autoconnect;\n    _this.ready = false;\n    _this.reconnect = reconnect;\n    _this.reconnect_interval = reconnect_interval;\n    _this.max_reconnects = max_reconnects;\n    _this.rest_options = rest_options;\n    _this.current_reconnects = 0;\n\n    _this.generate_request_id = generate_request_id || function () {\n      return ++_this.rpc_id;\n    };\n\n    if (_this.autoconnect) _this._connect(_this.address, Object.assign({\n      autoconnect: _this.autoconnect,\n      reconnect: _this.reconnect,\n      reconnect_interval: _this.reconnect_interval,\n      max_reconnects: _this.max_reconnects\n    }, _this.rest_options));\n    return _this;\n  }\n  /**\n   * Connects to a defined server if not connected already.\n   * @method\n   * @return {Undefined}\n   */\n\n\n  (0, _createClass2[\"default\"])(CommonClient, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this.socket) return;\n\n      this._connect(this.address, Object.assign({\n        autoconnect: this.autoconnect,\n        reconnect: this.reconnect,\n        reconnect_interval: this.reconnect_interval,\n        max_reconnects: this.max_reconnects\n      }, this.rest_options));\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"call\",\n    value: function call(method, params, timeout, ws_opts) {\n      var _this2 = this;\n\n      if (!ws_opts && \"object\" === (0, _typeof2[\"default\"])(timeout)) {\n        ws_opts = timeout;\n        timeout = null;\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.ready) return reject(new Error(\"socket not ready\"));\n\n        var rpc_id = _this2.generate_request_id(method, params);\n\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null,\n          id: rpc_id\n        };\n\n        _this2.socket.send(JSON.stringify(message), ws_opts, function (error) {\n          if (error) return reject(error);\n          _this2.queue[rpc_id] = {\n            promise: [resolve, reject]\n          };\n\n          if (timeout) {\n            _this2.queue[rpc_id].timeout = setTimeout(function () {\n              delete _this2.queue[rpc_id];\n              reject(new Error(\"reply timeout\"));\n            }, timeout);\n          }\n        });\n      });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee(params) {\n        var resp;\n        return _regenerator[\"default\"].wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.call(\"rpc.login\", params);\n\n              case 2:\n                resp = _context.sent;\n\n                if (resp) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error(\"authentication failed\");\n\n              case 5:\n                return _context.abrupt(\"return\", resp);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n\n  }, {\n    key: \"listMethods\",\n    value: function () {\n      var _listMethods = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee2() {\n        return _regenerator[\"default\"].wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.call(\"__listMethods\");\n\n              case 2:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function listMethods() {\n        return _listMethods.apply(this, arguments);\n      }\n\n      return listMethods;\n    }()\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"notify\",\n    value: function notify(method, params) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this3.ready) return reject(new Error(\"socket not ready\"));\n        var message = {\n          jsonrpc: \"2.0\",\n          method: method,\n          params: params || null\n        };\n\n        _this3.socket.send(JSON.stringify(message), function (error) {\n          if (error) return reject(error);\n          resolve();\n        });\n      });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function () {\n      var _subscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee3(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context3.next = 3;\n                return this.call(\"rpc.on\", event);\n\n              case 3:\n                result = _context3.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n\n              case 6:\n                return _context3.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function subscribe(_x2) {\n        return _subscribe.apply(this, arguments);\n      }\n\n      return subscribe;\n    }()\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function () {\n      var _unsubscribe = (0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee4(event) {\n        var result;\n        return _regenerator[\"default\"].wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (typeof event === \"string\") event = [event];\n                _context4.next = 3;\n                return this.call(\"rpc.off\", event);\n\n              case 3:\n                result = _context4.sent;\n\n                if (!(typeof event === \"string\" && result[event] !== \"ok\")) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                throw new Error(\"Failed unsubscribing from an event with: \" + result);\n\n              case 6:\n                return _context4.abrupt(\"return\", result);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function unsubscribe(_x3) {\n        return _unsubscribe.apply(this, arguments);\n      }\n\n      return unsubscribe;\n    }()\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"close\",\n    value: function close(code, data) {\n      this.socket.close(code || 1000, data);\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n\n  }, {\n    key: \"_connect\",\n    value: function _connect(address, options) {\n      var _this4 = this;\n\n      this.socket = this.webSocketFactory(address, options);\n      this.socket.addEventListener(\"open\", function () {\n        _this4.ready = true;\n\n        _this4.emit(\"open\");\n\n        _this4.current_reconnects = 0;\n      });\n      this.socket.addEventListener(\"message\", function (_ref) {\n        var message = _ref.data;\n        if (message instanceof ArrayBuffer) message = Buffer.from(message).toString();\n\n        try {\n          message = JSON.parse(message);\n        } catch (error) {\n          return;\n        } // check if any listeners are attached and forward event\n\n\n        if (message.notification && _this4.listeners(message.notification).length) {\n          if (!Object.keys(message.params).length) return _this4.emit(message.notification);\n          var args = [message.notification];\n          if (message.params.constructor === Object) args.push(message.params);else // using for-loop instead of unshift/spread because performance is better\n            for (var i = 0; i < message.params.length; i++) {\n              args.push(message.params[i]);\n            } // run as microtask so that pending queue messages are resolved first\n          // eslint-disable-next-line prefer-spread\n\n          return Promise.resolve().then(function () {\n            _this4.emit.apply(_this4, args);\n          });\n        }\n\n        if (!_this4.queue[message.id]) {\n          // general JSON RPC 2.0 events\n          if (message.method && message.params) {\n            // run as microtask so that pending queue messages are resolved first\n            return Promise.resolve().then(function () {\n              _this4.emit(message.method, message.params);\n            });\n          }\n\n          return;\n        } // reject early since server's response is invalid\n\n\n        if (\"error\" in message === \"result\" in message) _this4.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" + \" or \\\"error\\\", but not both.\"));\n        if (_this4.queue[message.id].timeout) clearTimeout(_this4.queue[message.id].timeout);\n        if (message.error) _this4.queue[message.id].promise[1](message.error);else _this4.queue[message.id].promise[0](message.result);\n        delete _this4.queue[message.id];\n      });\n      this.socket.addEventListener(\"error\", function (error) {\n        return _this4.emit(\"error\", error);\n      });\n      this.socket.addEventListener(\"close\", function (_ref2) {\n        var code = _ref2.code,\n            reason = _ref2.reason;\n        if (_this4.ready) // Delay close event until internal state is updated\n          setTimeout(function () {\n            return _this4.emit(\"close\", code, reason);\n          }, 0);\n        _this4.ready = false;\n        _this4.socket = undefined;\n        if (code === 1000) return;\n        _this4.current_reconnects++;\n        if (_this4.reconnect && (_this4.max_reconnects > _this4.current_reconnects || _this4.max_reconnects === 0)) setTimeout(function () {\n          return _this4._connect(address, options);\n        }, _this4.reconnect_interval);\n      });\n    }\n  }]);\n  return CommonClient;\n}(_eventemitter.EventEmitter);\n\nexports[\"default\"] = CommonClient;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nfunction _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\n\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine } from '@toruslabs/base-controllers';\nimport { mergeMiddleware, createAsyncMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport bs58 from 'bs58';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { PublicKey, Connection, Keypair } from '@solana/web3.js';\nimport nacl from '@toruslabs/tweetnacl-js';\n\nfunction createChainIdMiddleware(chainId) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createProviderConfigMiddleware(providerConfig) {\n  return (req, res, next, end) => {\n    if (req.method === \"solana_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\nfunction createConfigMiddleware(providerConfig) {\n  const {\n    chainId\n  } = providerConfig;\n  return mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig)]);\n}\nfunction createJsonRpcClient(providerConfig) {\n  const {\n    rpcTarget\n  } = providerConfig;\n  const fetchMiddleware = createFetchMiddleware({\n    rpcTarget\n  });\n  const networkMiddleware = mergeMiddleware([createConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware,\n    fetchMiddleware\n  };\n}\n\nfunction createGetAccountsMiddleware(_ref) {\n  let {\n    getAccounts\n  } = _ref;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"getAccounts\") return next();\n    if (!getAccounts) throw new Error(\"WalletMiddleware - opts.getAccounts not provided\"); // This calls from the prefs controller\n\n    const accounts = await getAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createRequestAccountsMiddleware(_ref2) {\n  let {\n    requestAccounts\n  } = _ref2;\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== \"requestAccounts\") return next();\n    if (!requestAccounts) throw new Error(\"WalletMiddleware - opts.requestAccounts not provided\"); // This calls the UI login function\n\n    const accounts = await requestAccounts(request);\n    response.result = accounts;\n    return undefined;\n  });\n}\nfunction createGenericJRPCMiddleware(targetMethod, handler) {\n  return createAsyncMiddleware(async (request, response, next) => {\n    const {\n      method\n    } = request;\n    if (method !== targetMethod) return next();\n    if (!handler) throw new Error(\"WalletMiddleware - \".concat(targetMethod, \" not provided\"));\n    const result = await handler(request);\n    response.result = result;\n    return undefined;\n  });\n}\nfunction createSolanaMiddleware(providerHandlers) {\n  const {\n    getAccounts,\n    requestAccounts,\n    signTransaction,\n    signAndSendTransaction,\n    signAllTransactions,\n    signMessage,\n    getPrivateKey,\n    getSecretKey\n  } = providerHandlers;\n  return mergeMiddleware([createRequestAccountsMiddleware({\n    requestAccounts\n  }), createGetAccountsMiddleware({\n    getAccounts\n  }), createGenericJRPCMiddleware(\"signTransaction\", signTransaction), createGenericJRPCMiddleware(\"signAndSendTransaction\", signAndSendTransaction), createGenericJRPCMiddleware(\"signAllTransactions\", signAllTransactions), createGenericJRPCMiddleware(\"signMessage\", signMessage), createGenericJRPCMiddleware(\"solanaPrivateKey\", getPrivateKey), createGenericJRPCMiddleware(\"solanaSecretKey\", getSecretKey)]);\n}\nfunction createChainSwitchMiddleware(_ref3) {\n  let {\n    addNewChainConfig,\n    switchSolanaChain\n  } = _ref3;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"addSolanaChain\", addNewChainConfig), createGenericJRPCMiddleware(\"switchSolanaChain\", switchSolanaChain)]);\n}\nfunction createAccountMiddleware(_ref4) {\n  let {\n    updatePrivatekey\n  } = _ref4;\n  return mergeMiddleware([createGenericJRPCMiddleware(\"updateAccount\", updatePrivatekey)]);\n}\n\nfunction ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass BaseInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    const engine = new JRPCEngine();\n    const providerHandlers = this.getProviderHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    engine.push(solanaMiddleware);\n    const configMiddleware = createConfigMiddleware(this.config.chainConfig);\n    engine.push(configMiddleware);\n    const injectedProviderProxy = this.getInjectedProviderProxy(injectedProvider);\n\n    if (injectedProviderProxy) {\n      engine.push(injectedProviderProxy);\n    }\n\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async lookupNetwork() {\n    const {\n      chainConfig\n    } = this.config;\n    this.update({\n      chainId: chainConfig.chainId\n    });\n    return chainConfig.chainId || \"\";\n  }\n\n  getInjectedProviderProxy(_) {\n    return undefined;\n  }\n\n}\n\nconst getBaseProviderHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [];\n    },\n    getAccounts: async () => injectedProvider.publicKey ? [bs58.encode(injectedProvider.publicKey.toBytes())] : [],\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const transaction = await injectedProvider.signTransaction(req.params.message);\n      return transaction;\n    },\n    signMessage: async req => {\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = await injectedProvider.signAllTransactions(req.params.message);\n      return transaction;\n    },\n    signAndSendTransaction: async req => {\n      const txRes = await injectedProvider.signAndSendTransaction(req.params.message);\n      return {\n        signature: txRes.signature\n      };\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction createInjectedProviderProxyMiddleware(provider) {\n  return createAsyncMiddleware(async (req, res, _next) => {\n    const result = await provider.request(_objectSpread$2({}, req));\n    res.result = result;\n  });\n}\n\nclass PhantomInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getBaseProviderHandlers(injectedProvider);\n  }\n\n  getInjectedProviderProxy(injectedProvider) {\n    return createInjectedProviderProxyMiddleware(injectedProvider);\n  }\n\n}\n\nconst getSlopeHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getAccounts: async () => {\n      const {\n        data\n      } = await injectedProvider.connect();\n      return [data.publicKey];\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signTransaction: async req => {\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      return txMessage;\n    },\n    signMessage: async req => {\n      const response = await injectedProvider.signMessage(req.params.message);\n      return bs58.decode(response.data.signature);\n    },\n    signAndSendTransaction: async req => {\n      const provider = getProviderEngineProxy();\n      if (!provider) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const txMessage = req.params.message;\n      if (!txMessage) throw ethErrors.rpc.invalidRequest({\n        message: \"Invalid transaction message\"\n      });\n      const {\n        data\n      } = await injectedProvider.signTransaction(bs58.encode(txMessage.serializeMessage()));\n      if (!data.publicKey || !data.signature) throw new Error(\"Invalid signature from slope wallet\");\n      const publicKey = new PublicKey(data.publicKey);\n      const signature = bs58.decode(data.signature);\n      txMessage.addSignature(publicKey, signature);\n      const chainConfig = await provider.request({\n        method: \"solana_provider_config\",\n        params: []\n      });\n      const conn = new Connection(chainConfig.rpcTarget);\n      const res = await conn.sendRawTransaction(txMessage.serialize());\n      return {\n        signature: res\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params, _req$params2, _data$signatures;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message) || !((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const allTxns = req.params.message;\n      const {\n        length\n      } = allTxns;\n      const unsignedTx = [];\n\n      for (let i = 0; i < length; i++) {\n        unsignedTx.push(bs58.encode(req.params.message[i].serializeMessage()));\n      }\n\n      const {\n        msg,\n        data\n      } = await injectedProvider.signAllTransactions(unsignedTx);\n      if (!data.publicKey || ((_data$signatures = data.signatures) === null || _data$signatures === void 0 ? void 0 : _data$signatures.length) !== length) throw new Error(msg);\n      const publicKey = new PublicKey(data.publicKey);\n\n      for (let i = 0; i < length; i++) {\n        const signature = bs58.decode(data.signatures[i]);\n        allTxns[i].addSignature(publicKey, signature);\n      }\n\n      return allTxns;\n    }\n  };\n  return providerHandlers;\n};\n\nclass SlopeInjectedProxyProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSlopeHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolflareHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const solflareProviderHandlers = getBaseProviderHandlers(injectedProvider);\n\n  solflareProviderHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return solflareProviderHandlers;\n};\n\nclass SolflareInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolflareHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getSolletHandlers = (injectedProvider, getProviderEngineProxy) => {\n  const providerHandlers = getBaseProviderHandlers(injectedProvider);\n\n  providerHandlers.signMessage = async req => {\n    const {\n      signature\n    } = await injectedProvider.sign(req.params.message, \"utf8\");\n    return signature;\n  };\n\n  providerHandlers.signAndSendTransaction = async req => {\n    const provider = getProviderEngineProxy();\n    if (!provider) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const transaction = await injectedProvider.signTransaction(req.params.message);\n    const chainConfig = await provider.request({\n      method: \"solana_provider_config\",\n      params: []\n    });\n    const conn = new Connection(chainConfig.rpcTarget);\n    const res = await conn.sendRawTransaction(transaction.serialize());\n    return {\n      signature: res\n    };\n  };\n\n  return providerHandlers;\n};\n\nclass SolletInjectedProvider extends BaseInjectedProvider {\n  getProviderHandlers(injectedProvider) {\n    return getSolletHandlers(injectedProvider, this.getProviderEngineProxy.bind(this));\n  }\n\n}\n\nconst getTorusHandlers = injectedProvider => {\n  const providerHandlers = {\n    requestAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_requestAccounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getAccounts: async () => {\n      const accounts = await injectedProvider.request({\n        method: \"solana_accounts\",\n        params: {}\n      });\n      return accounts;\n    },\n    getPrivateKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    getSecretKey: async () => {\n      throw ethErrors.rpc.methodNotSupported();\n    },\n    signMessage: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const message = await injectedProvider.signMessage(req.params.message);\n      return message;\n    },\n    signTransaction: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.signTransaction(txMessage);\n      return response;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txMessage = req.params.message;\n      const response = await injectedProvider.sendTransaction(txMessage);\n      return {\n        signature: response\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transactions = req.params.message;\n      const response = await injectedProvider.signAllTransactions(transactions);\n      return response;\n    }\n  };\n  return providerHandlers;\n};\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass TorusInjectedProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async switchChain(_) {\n    return Promise.resolve();\n  }\n\n  async setupProvider(injectedProvider) {\n    this.handleInjectedProviderUpdate(injectedProvider);\n    await this.setupEngine(injectedProvider);\n  }\n\n  async lookupNetwork() {\n    if (!this.provider) throw ethErrors.provider.custom({\n      message: \"Torus solana provider is not initialized\",\n      code: 4902\n    });\n    const {\n      chainId\n    } = this.config.chainConfig;\n    const connectedChainId = await this.provider.request({\n      method: \"solana_chainId\"\n    });\n    const connectedHexChainId = isHexStrict(connectedChainId.toString()) ? connectedChainId : \"0x\".concat(parseInt(connectedChainId, 10).toString(16));\n    if (chainId !== connectedHexChainId) throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n    this.update({\n      chainId: connectedHexChainId\n    });\n    this.provider.emit(\"connect\", {\n      chainId: this.state.chainId\n    });\n    this.provider.emit(\"chainChanged\", this.state.chainId);\n    return this.state.chainId;\n  }\n\n  async setupEngine(injectedProvider) {\n    const providerHandlers = getTorusHandlers(injectedProvider);\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const injectedProviderProxy = createInjectedProviderProxyMiddleware(injectedProvider);\n    const engine = new JRPCEngine();\n    engine.push(solanaMiddleware);\n    engine.push(injectedProviderProxy);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async handleInjectedProviderUpdate(injectedProvider) {\n    injectedProvider.on(\"accountsChanged\", async accounts => {\n      this.provider.emit(\"accountsChanged\", accounts);\n    });\n    injectedProvider.on(\"chainChanged\", async chainId => {\n      const connectedHexChainId = isHexStrict(chainId) ? chainId : \"0x\".concat(parseInt(chainId, 10).toString(16)); // Check if chainId changed and trigger event\n\n      this.configure({\n        chainConfig: _objectSpread$1(_objectSpread$1({}, this.config.chainConfig), {}, {\n          chainId: connectedHexChainId\n        })\n      });\n      await this.setupProvider(injectedProvider);\n    });\n  }\n\n}\n\nasync function getProviderHandlers(_ref) {\n  let {\n    privKey,\n    getProviderEngineProxy\n  } = _ref;\n\n  const keyPairGenerator = () => {\n    return Keypair.fromSecretKey(Buffer.from(privKey, \"hex\"));\n  };\n\n  if (typeof privKey !== \"string\") throw WalletInitializationError.invalidParams(\"privKey must be a string\");\n  const keyPair = keyPairGenerator();\n  const providerHandlers = {\n    requestAccounts: async () => {\n      return [keyPair.publicKey.toBase58()];\n    },\n    getAccounts: async () => [keyPair.publicKey.toBase58()],\n    getPrivateKey: async () => privKey,\n    getSecretKey: async () => bs58.encode(keyPair.secretKey),\n    signTransaction: async req => {\n      var _req$params;\n\n      if (!((_req$params = req.params) !== null && _req$params !== void 0 && _req$params.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const transaction = req.params.message;\n      transaction.partialSign(keyPair);\n      return transaction;\n    },\n    signMessage: async req => {\n      var _req$params2;\n\n      if (!((_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const signedMsg = nacl.sign.detached(req.params.message, keyPair.secretKey);\n      return signedMsg;\n    },\n    signAndSendTransaction: async req => {\n      var _req$params3;\n\n      if (!((_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.message)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const _providerEngineProxy = getProviderEngineProxy();\n\n      if (!_providerEngineProxy) throw ethErrors.provider.custom({\n        message: \"Provider is not initialized\",\n        code: 4902\n      });\n      const transaction = req.params.message;\n      transaction.sign(keyPair);\n      const sig = await _providerEngineProxy.request({\n        method: \"sendTransaction\",\n        params: [bs58.encode(transaction.serialize())]\n      });\n      return {\n        signature: sig\n      };\n    },\n    signAllTransactions: async req => {\n      var _req$params4, _req$params5, _req$params6;\n\n      if (!((_req$params4 = req.params) !== null && _req$params4 !== void 0 && _req$params4.message) || !((_req$params5 = req.params) !== null && _req$params5 !== void 0 && _req$params5.message.length)) {\n        throw ethErrors.rpc.invalidParams(\"message\");\n      }\n\n      const txns = (_req$params6 = req.params) === null || _req$params6 === void 0 ? void 0 : _req$params6.message;\n\n      for (const tx of txns || []) {\n        const transaction = tx;\n        transaction.partialSign(keyPair);\n      }\n\n      return txns;\n    }\n  };\n  return providerHandlers;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nclass SolanaPrivateKeyProvider extends BaseProvider {\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.SOLANA\n        })\n      },\n      state\n    });\n  }\n\n  async enable() {\n    if (!this.state.privateKey) throw ethErrors.provider.custom({\n      message: \"Private key is not found in state, plz pass it in constructor state param\",\n      code: 4902\n    });\n    await this.setupProvider(this.state.privateKey);\n    return this._providerEngineProxy.request({\n      method: \"eth_accounts\"\n    });\n  }\n\n  async setupProvider(privKey) {\n    const providerHandlers = await getProviderHandlers({\n      privKey,\n      getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n    });\n    const solanaMiddleware = createSolanaMiddleware(providerHandlers);\n    const engine = new JRPCEngine();\n    const {\n      networkMiddleware\n    } = createJsonRpcClient(this.config.chainConfig);\n    engine.push(this.getChainSwitchMiddleware());\n    engine.push(this.getAccountMiddleware());\n    engine.push(solanaMiddleware);\n    engine.push(networkMiddleware);\n    const provider = providerFromEngine(engine);\n    this.updateProviderEngineProxy(provider);\n    await this.lookupNetwork();\n  }\n\n  async updateAccount(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const existingKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n\n    if (existingKey !== params.privateKey) {\n      await this.setupProvider(params.privateKey);\n\n      this._providerEngineProxy.emit(\"accountsChanged\", {\n        accounts: await this._providerEngineProxy.request({\n          method: \"requestAccounts\"\n        })\n      });\n    }\n  }\n\n  async switchChain(params) {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const chainConfig = this.getChainConfig(params.chainId);\n    this.update({\n      chainId: \"loading\"\n    });\n    this.configure({\n      chainConfig\n    });\n    const privKey = await this._providerEngineProxy.request({\n      method: \"solanaPrivateKey\"\n    });\n    await this.setupProvider(privKey);\n  }\n\n  async lookupNetwork() {\n    if (!this._providerEngineProxy) throw ethErrors.provider.custom({\n      message: \"Provider is not initialized\",\n      code: 4902\n    });\n    const health = await this._providerEngineProxy.request({\n      method: \"getHealth\",\n      params: []\n    });\n    const {\n      chainConfig\n    } = this.config;\n    if (health !== \"ok\") throw WalletInitializationError.rpcConnectionError(\"Failed to lookup network for following rpc target: \".concat(chainConfig.rpcTarget));\n    this.update({\n      chainId: chainConfig.chainId\n    });\n\n    if (this.state.chainId !== chainConfig.chainId) {\n      this.provider.emit(\"chainChanged\", this.state.chainId);\n      this.provider.emit(\"connect\", {\n        chainId: this.state.chainId\n      });\n    }\n\n    return this.state.chainId;\n  }\n\n  getChainSwitchMiddleware() {\n    const chainSwitchHandlers = {\n      addNewChainConfig: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        const {\n          chainId,\n          chainName,\n          rpcUrls,\n          blockExplorerUrls,\n          nativeCurrency\n        } = req.params;\n        if (!chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n        if (!rpcUrls || rpcUrls.length === 0) throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n        if (!nativeCurrency) throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n        this.addChain({\n          chainNamespace: CHAIN_NAMESPACES.SOLANA,\n          chainId,\n          ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"SOL\",\n          tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Solana\",\n          displayName: chainName,\n          rpcTarget: rpcUrls[0],\n          blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n        });\n      },\n      switchSolanaChain: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.chainId) throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n        await this.switchChain(req.params);\n      }\n    };\n    const chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n    return chainSwitchMiddleware;\n  }\n\n  getAccountMiddleware() {\n    const accountHandlers = {\n      updatePrivatekey: async req => {\n        if (!req.params) throw ethErrors.rpc.invalidParams(\"Missing request params\");\n        if (!req.params.privateKey) throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n        const {\n          privateKey\n        } = req.params;\n        await this.updateAccount({\n          privateKey\n        });\n      }\n    };\n    return createAccountMiddleware(accountHandlers);\n  }\n\n}\n\n_defineProperty(SolanaPrivateKeyProvider, \"getProviderInstance\", async params => {\n  const providerFactory = new SolanaPrivateKeyProvider({\n    config: {\n      chainConfig: params.chainConfig\n    }\n  });\n  await providerFactory.setupProvider(params.privKey);\n  return providerFactory;\n});\n\nclass SolanaWallet {\n  constructor(provider) {\n    _defineProperty(this, \"provider\", void 0);\n\n    this.provider = provider;\n  }\n\n  async requestAccounts() {\n    const accounts = await this.provider.request({\n      method: \"requestAccounts\",\n      params: {}\n    });\n    return accounts;\n  }\n\n  async signAndSendTransaction(transaction) {\n    const {\n      signature\n    } = await this.provider.request({\n      method: \"signAndSendTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return {\n      signature\n    };\n  }\n\n  async signTransaction(transaction) {\n    const signedTransaction = await this.provider.request({\n      method: \"signTransaction\",\n      params: {\n        message: transaction\n      }\n    });\n    return signedTransaction;\n  }\n\n  async signAllTransactions(transactions) {\n    const signedTransactions = await this.provider.request({\n      method: \"signAllTransactions\",\n      params: {\n        message: transactions\n      }\n    });\n    return signedTransactions;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"signMessage\",\n      params: {\n        message: data\n      }\n    });\n    return response;\n  }\n\n  async request(args) {\n    const result = await this.provider.request(args);\n    return result;\n  }\n\n}\n\nexport { PhantomInjectedProvider, SlopeInjectedProxyProvider, SolanaPrivateKeyProvider, SolanaWallet, SolflareInjectedProvider, SolletInjectedProvider, TorusInjectedProvider };\n//# sourceMappingURL=solanaProvider.esm.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":""}